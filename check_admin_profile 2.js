// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://your-project.supabase.co'
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'your-anon-key'

const supabase = createClient(supabaseUrl, supabaseKey)

async function checkAdminProfile() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...\n')

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ user_profiles
    const { data: profiles, error: profilesError } = await supabase
      .from('user_profiles')
      .select('*')
    
    if (profilesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π:', profilesError)
      return
    }

    console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${profiles?.length || 0}\n`)
    
    if (profiles && profiles.length > 0) {
      profiles.forEach((profile, index) => {
        console.log(`üë§ –ü—Ä–æ—Ñ–∏–ª—å ${index + 1}:`)
        console.log(`   ID: ${profile.id}`)
        console.log(`   –ò–º—è: ${profile.full_name}`)
        console.log(`   –ö–æ–º–ø–∞–Ω–∏—è: ${profile.company_name}`)
        console.log(`   –¢–µ–ª–µ—Ñ–æ–Ω: ${profile.phone_number}`)
        console.log(`   –†–æ–ª—å: ${profile.role}`)
        console.log(`   –°–æ–∑–¥–∞–Ω: ${profile.created_at}`)
        console.log('')
      })
    } else {
      console.log('‚ö†Ô∏è  –ü—Ä–æ—Ñ–∏–ª–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
    }

    // 2. –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ —Å admin@weshow.ru
    console.log('üîê –ü–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ —Å admin@weshow.ru...\n')
    
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'admin@weshow.ru',
      password: 'password'
    })

    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', authError.message)
      return
    }

    console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!')
    console.log(`   User ID: ${authData.user?.id}`)
    console.log(`   Email: ${authData.user?.email}`)
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: userProfile, error: userProfileError } = await supabase
      .from('user_profiles')
      .select('*')
      .eq('id', authData.user?.id)
      .single()
    
    if (userProfileError) {
      console.error('\n‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ user_profiles!')
      console.error('   –û—à–∏–±–∫–∞:', userProfileError.message)
      console.log('\nüí° –†–µ—à–µ–Ω–∏–µ: –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      
      // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
      console.log('\nüîß –°–æ–∑–¥–∞—é –ø—Ä–æ—Ñ–∏–ª—å...')
      const { data: newProfile, error: createError } = await supabase
        .from('user_profiles')
        .insert({
          id: authData.user?.id,
          full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
          company_name: 'WeShow',
          phone_number: '+7 (495) 580-75-37',
          role: 'admin'
        })
        .select()
        .single()
      
      if (createError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', createError)
      } else {
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
        console.log(`   ID: ${authData.user?.id}`)
        console.log(`   –†–æ–ª—å: admin`)
      }
      
      return
    }

    console.log('\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω!')
    console.log(`   –ò–º—è: ${userProfile.full_name}`)
    console.log(`   –†–æ–ª—å: ${userProfile.role}`)
    console.log(`   –ö–æ–º–ø–∞–Ω–∏—è: ${userProfile.company_name}`)
    
    if (userProfile.role !== 'admin' && userProfile.role !== 'manager') {
      console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –†–æ–ª—å –Ω–µ admin –∏ –Ω–µ manager!')
      console.log(`   –¢–µ–∫—É—â–∞—è —Ä–æ–ª—å: ${userProfile.role}`)
      console.log('\nüí° –û–±–Ω–æ–≤–ª—è—é —Ä–æ–ª—å –Ω–∞ admin...')
      
      const { error: updateError } = await supabase
        .from('user_profiles')
        .update({ role: 'admin' })
        .eq('id', authData.user?.id)
      
      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–æ–ª–∏:', updateError)
      } else {
        console.log('‚úÖ –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ admin!')
      }
    } else {
      console.log('\n‚úÖ –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ! –†–æ–ª—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è.')
    }

    // –í—ã—Ö–æ–¥–∏–º
    await supabase.auth.signOut()

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
  }
}

checkAdminProfile()



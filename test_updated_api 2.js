#!/usr/bin/env node

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ API
const SUPABASE_URL = 'https://zbykhdjqrtqftfitbvbt.supabase.co'
const SUPABASE_SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTEzOTMyMywiZXhwIjoyMDc0NzE1MzIzfQ.KOCzZQGNqpGmuXxhuCjAtUPcD8qHr9Alti_uVejrRFs'

import { createClient } from '@supabase/supabase-js'

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY)

// –§—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –≤ adminRest.ts
async function getCases() {
  try {
    const { data, error } = await supabase
      .from('cases')
      .select('*')
      .order('sort_order', { ascending: true })
    
    if (error) throw error
    return data || []
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–µ–π—Å–æ–≤:', error)
    return []
  }
}

async function createCase(data) {
  try {
    const { data: result, error } = await supabase
      .from('cases')
      .insert(data)
      .select()
    
    if (error) throw error
    return result
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–µ–π—Å–∞:', error)
    throw error
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
async function testUpdatedAPI() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–£–Æ –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò API...\n');
  
  try {
    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–µ–π—Å–æ–≤
    console.log('üì° –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–µ–π—Å–æ–≤...');
    const cases = await getCases();
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–µ–π—Å–æ–≤: ${cases.length}`);
    
    // –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–µ–π—Å–∞
    console.log('\nüìù –¢–µ—Å—Ç–∏—Ä—É—é —Å–æ–∑–¥–∞–Ω–∏–µ –∫–µ–π—Å–∞...');
    const testCase = {
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π API —Ç–µ—Å—Ç –∫–µ–π—Å',
      description: '–û–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ API —Ç–µ—Å—Ç –∫–µ–π—Å–∞',
      client: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π API –∫–ª–∏–µ–Ω—Ç',
      year: 2024,
      is_visible: true,
      sort_order: 6666
    };
    
    const result = await createCase(testCase);
    console.log(`‚úÖ –ö–µ–π—Å —Å–æ–∑–¥–∞–Ω: ${result?.[0]?.id}`);
    
    console.log('\nüéâ –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢!');
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–µ–π—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–µ–π—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–æ–ª–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å');
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testUpdatedAPI();



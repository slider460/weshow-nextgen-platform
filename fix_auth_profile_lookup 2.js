#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js';

// Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const supabaseUrl = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTEzOTMyMywiZXhwIjoyMDc0NzE1MzIzfQ.KOCzZQGNqpGmuXxhuCjAtUPcD8qHr9Alti_uVejrRFs';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å service role –∫–ª—é—á–æ–º
const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–æ—Ñ–∏–ª–µ–º
async function diagnoseProfileIssue() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É—é –ø—Ä–æ–±–ª–µ–º—É —Å –ø—Ä–æ—Ñ–∏–ª–µ–º...');
  
  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin@weshow.ru
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('id, email')
      .eq('email', 'admin@weshow.ru');
      
    if (usersError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersError.message}`);
      return;
    }
    
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users?.length || 0}`);
    
    if (!users || users.length === 0) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin@weshow.ru –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    const adminUser = users[0];
    console.log(`‚úÖ –ê–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${adminUser.email} (ID: ${adminUser.id})`);
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ id (–∫–∞–∫ —Å–µ–π—á–∞—Å –≤ –∫–æ–¥–µ)
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –ø—Ä–æ—Ñ–∏–ª—å –ø–æ id (—Ç–µ–∫—É—â–∏–π —Å–ø–æ—Å–æ–±):');
    const { data: profileById, error: profileByIdError } = await supabase
      .from('user_profiles')
      .select('*')
      .eq('id', adminUser.id)
      .maybeSingle();
      
    if (profileByIdError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ id: ${profileByIdError.message}`);
    } else if (profileById) {
      console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ id: ${profileById.full_name}`);
    } else {
      console.log(`‚ùå –ü—Ä–æ—Ñ–∏–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –ø–æ id`);
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ user_id (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±)
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –ø—Ä–æ—Ñ–∏–ª—å –ø–æ user_id (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±):');
    const { data: profileByUserId, error: profileByUserIdError } = await supabase
      .from('user_profiles')
      .select('*')
      .eq('user_id', adminUser.id)
      .maybeSingle();
      
    if (profileByUserIdError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ user_id: ${profileByUserIdError.message}`);
    } else if (profileByUserId) {
      console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ user_id: ${profileByUserId.full_name}`);
    } else {
      console.log(`‚ùå –ü—Ä–æ—Ñ–∏–ª—å –ù–ï –Ω–∞–π–¥–µ–Ω –ø–æ user_id`);
    }
    
    // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    console.log('\nüìã –í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –≤ user_profiles:');
    const { data: allProfiles, error: allProfilesError } = await supabase
      .from('user_profiles')
      .select('*');
      
    if (allProfilesError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π: ${allProfilesError.message}`);
    } else {
      console.log(`‚úÖ –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${allProfiles?.length || 0}`);
      allProfiles?.forEach((profile, index) => {
        console.log(`   ${index + 1}. ID: ${profile.id}, User ID: ${profile.user_id}, Name: ${profile.full_name}, Role: ${profile.role}`);
      });
    }
    
    return {
      adminUser,
      profileById: !!profileById,
      profileByUserId: !!profileByUserId
    };
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞: ${error.message}`);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
async function fixProfileLookup(adminUser) {
  console.log('\nüîß –ò—Å–ø—Ä–∞–≤–ª—è—é –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞...');
  
  try {
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Ç–∞–∫, —á—Ç–æ–±—ã id —Å–æ–≤–ø–∞–¥–∞–ª —Å user_id
    const { data: updatedProfile, error: updateError } = await supabase
      .from('user_profiles')
      .update({ 
        id: adminUser.id,  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º id —Ä–∞–≤–Ω—ã–º user_id
        user_id: adminUser.id,
        full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        role: 'admin'
      })
      .eq('user_id', adminUser.id)
      .select()
      .single();
      
    if (updateError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${updateError.message}`);
      return false;
    } else {
      console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω: ${updatedProfile.full_name}`);
      return true;
    }
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞: ${error.message}`);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
async function testFix(adminUser) {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...');
  
  try {
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ id (–∫–∞–∫ –≤ AuthContext)
    const { data: testProfile, error: testError } = await supabase
      .from('user_profiles')
      .select('*')
      .eq('id', adminUser.id)
      .maybeSingle();
      
    if (testError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${testError.message}`);
      return false;
    } else if (testProfile) {
      console.log(`‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–µ–Ω: –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω –ø–æ id`);
      console.log(`   –ò–º—è: ${testProfile.full_name}`);
      console.log(`   –†–æ–ª—å: ${testProfile.role}`);
      return true;
    } else {
      console.log(`‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ id`);
      return false;
    }
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
async function fixAuthProfileLookup() {
  console.log('üöÄ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–û–ò–°–ö–ê –ü–†–û–§–ò–õ–Ø –í –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò...\n');
  
  const diagnosis = await diagnoseProfileIssue();
  
  if (!diagnosis) {
    console.log('‚ùå –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å');
    return;
  }
  
  if (!diagnosis.profileById) {
    console.log('\nüîß –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ id, –∏—Å–ø—Ä–∞–≤–ª—è—é...');
    const fixed = await fixProfileLookup(diagnosis.adminUser);
    
    if (fixed) {
      const testPassed = await testFix(diagnosis.adminUser);
      
      if (testPassed) {
        console.log('\nüéâ –ü–†–û–ë–õ–ï–ú–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!');
        console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Ç–µ–ø–µ—Ä—å –Ω–∞–π–¥–µ–Ω –ø–æ id');
        console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å');
        console.log('‚úÖ –ö–µ–π—Å—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è');
        console.log('\nüöÄ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞!');
      } else {
        console.log('\n‚ö†Ô∏è  –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ');
      }
    } else {
      console.log('\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å');
    }
  } else {
    console.log('\n‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ –Ω–∞–π–¥–µ–Ω –ø–æ id, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ');
  }
}

// –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
fixAuthProfileLookup();



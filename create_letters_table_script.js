const { createClient } = require('@supabase/supabase-js');

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase
const supabase = createClient(
  'https://zbykhdjqrtqftfitbvbt.supabase.co',
  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE'
);

async function createTableAndData() {
  try {
    console.log('üîß –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É letters_certificates...');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ SQL –∑–∞–ø—Ä–æ—Å
    const { data, error } = await supabase
      .from('information_schema.tables')
      .select('table_name')
      .eq('table_name', 'letters_certificates');
    
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã:', error.message);
      console.log('');
      console.log('üìù –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞–π—Ç–µ –µ—ë –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard:');
      console.log('');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ https://supabase.com/dashboard');
      console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç zbykhdjqrtqftfitbvbt');
      console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
      console.log('4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –∏–∑ —Ñ–∞–π–ª–∞ –°–û–ó–î–ê–ù–ò–ï_–¢–ê–ë–õ–ò–¶–´_–ü–ò–°–ï–ú_–ò_–ì–†–ê–ú–û–¢.md');
      console.log('');
      console.log('üîó –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞: http://localhost:8083/test-letters-table');
      return;
    }
    
    if (data && data.length > 0) {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ letters_certificates —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
      const { data: letters, error: lettersError } = await supabase
        .from('letters_certificates')
        .select('*')
        .limit(5);
      
      if (lettersError) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', lettersError.message);
      } else {
        console.log('üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:', letters?.length || 0);
        if (letters && letters.length > 0) {
          console.log('üìã –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø–∏—Å–µ–π:');
          letters.forEach((letter, index) => {
            console.log(`${index + 1}. ${letter.title} (${letter.type})`);
          });
        }
      }
    } else {
      console.log('üìã –¢–∞–±–ª–∏—Ü–∞ letters_certificates –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.');
      console.log('');
      console.log('üîß –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –≤ Supabase Dashboard:');
      console.log('');
      console.log('SQL –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:');
      console.log(`
CREATE TABLE letters_certificates (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  image_url TEXT,
  document_url TEXT,
  type VARCHAR(50) NOT NULL CHECK (type IN ('letter', 'certificate', 'award', 'diploma')),
  issuer VARCHAR(255) NOT NULL,
  issued_date DATE,
  is_visible BOOLEAN DEFAULT true,
  sort_order INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –ò–Ω–¥–µ–∫—Å—ã
CREATE INDEX idx_letters_certificates_type ON letters_certificates(type);
CREATE INDEX idx_letters_certificates_visible ON letters_certificates(is_visible);
CREATE INDEX idx_letters_certificates_sort ON letters_certificates(sort_order);

-- RLS
ALTER TABLE letters_certificates ENABLE ROW LEVEL SECURITY;

-- –ü–æ–ª–∏—Ç–∏–∫–∏
CREATE POLICY "Anyone can view visible letters and certificates" ON letters_certificates
  FOR SELECT USING (is_visible = true);

CREATE POLICY "Admins can manage letters and certificates" ON letters_certificates
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE users.id = auth.uid() 
      AND users.role = 'admin'
    )
  );

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
CREATE OR REPLACE FUNCTION update_letters_certificates_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –¢—Ä–∏–≥–≥–µ—Ä
CREATE TRIGGER update_letters_certificates_updated_at
  BEFORE UPDATE ON letters_certificates
  FOR EACH ROW
  EXECUTE FUNCTION update_letters_certificates_updated_at();

-- –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT INTO letters_certificates (title, description, type, issuer, issued_date, sort_order) VALUES
('–ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –ì–∞–∑–ø—Ä–æ–º', '–ó–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞', 'letter', '–ü–ê–û –ì–∞–∑–ø—Ä–æ–º', '2024-01-15', 1),
('–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞—á–µ—Å—Ç–≤–∞', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º', 'certificate', 'ISO International', '2024-02-20', 2),
('–î–∏–ø–ª–æ–º –∑–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', '–î–∏–ø–ª–æ–º –∑–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞', 'diploma', '–†–æ—Å—Å–∏–π—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞', '2024-03-10', 3),
('–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –ø—Ä–æ–µ–∫—Ç', '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –≥–æ–¥–∞', 'award', '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤', '2024-04-05', 4);
      `);
    }
    
  } catch (err) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', err.message);
  }
}

createTableAndData();

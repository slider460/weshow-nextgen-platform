#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js';

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–µ–π—Å–æ–≤ –∫–∞–∫ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
const SUPABASE_URL = 'https://zbykhdjqrtqftfitbvbt.supabase.co'
const SUPABASE_SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTEzOTMyMywiZXhwIjoyMDc0NzE1MzIzfQ.KOCzZQGNqpGmuXxhuCjAtUPcD8qHr9Alti_uVejrRFs'

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å service role (–∫–∞–∫ –≤ adminRest.ts)
const adminSupabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

// –§—É–Ω–∫—Ü–∏—è createCase –∫–∞–∫ –≤ adminRest.ts
async function createCase(data) {
  try {
    const { data: result, error } = await adminSupabase
      .from('cases')
      .insert(data)
      .select()
    
    if (error) throw error
    return result
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–µ–π—Å–∞:', error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è updateCase –∫–∞–∫ –≤ adminRest.ts
async function updateCase(id, data) {
  try {
    const { data: result, error } = await adminSupabase
      .from('cases')
      .update(data)
      .eq('id', id)
      .select()
    
    if (error) throw error
    return result
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ–π—Å–∞:', error)
    throw error
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–µ–π—Å–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–∞–∫ –≤ —Ñ–æ—Ä–º–µ
async function testCaseSave() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–µ–π—Å–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ —Ñ–æ—Ä–º—ã...');
  
  try {
    const caseData = {
      title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ù–æ–≤—ã–π –≥–æ–¥ Samsung',
      description: '–ü–æ–ª–Ω–æ–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∏ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ',
      detailed_description: '–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –¥–µ—Ç–∞–ª—è–º–∏',
      client: 'Samsung',
      year: 2025,
      project_duration: '3-6 –º–µ—Å—è—Ü–µ–≤',
      challenges: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤—ã–∑–æ–≤—ã –ø—Ä–æ–µ–∫—Ç–∞',
      solutions: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
      results: JSON.stringify(['–†–µ–∑—É–ª—å—Ç–∞—Ç 1', '–†–µ–∑—É–ª—å—Ç–∞—Ç 2', '–†–µ–∑—É–ª—å—Ç–∞—Ç 3']),
      technologies_used: ['React', 'Node.js', 'Supabase'],
      is_visible: true,
      sort_order: 5555,
      featured: false,
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    };
    
    console.log('üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', caseData);
    
    const result = await createCase(caseData);
    console.log('‚úÖ –ö–µ–π—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', result);
    
    if (result && result[0]) {
      console.log(`‚úÖ ID —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –∫–µ–π—Å–∞: ${result[0].id}`);
      
      // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
      console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ–π—Å–∞...');
      const updateData = {
        title: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –ù–æ–≤—ã–π –≥–æ–¥ Samsung',
        updated_at: new Date().toISOString()
      };
      
      const updateResult = await updateCase(result[0].id, updateData);
      console.log('‚úÖ –ö–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω:', updateResult);
    }
    
    return true;
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–µ–π—Å–∞: ${error.message}`);
    return false;
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
async function testImageUpload() {
  console.log('\nüñºÔ∏è –¢–µ—Å—Ç–∏—Ä—É—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ —ç—Ç–æ –±—É–¥–µ—Ç —Ñ–∞–π–ª –∏–∑ —Ñ–æ—Ä–º—ã)
    const testImageData = new Uint8Array([137, 80, 78, 71, 13, 10, 26, 10]); // PNG –∑–∞–≥–æ–ª–æ–≤–æ–∫
    const testFile = new File([testImageData], 'test.png', { type: 'image/png' });
    
    const fileName = `${Date.now()}.png`;
    const filePath = `cases/images/${fileName}`;
    
    console.log(`üì§ –ó–∞–≥—Ä—É–∂–∞—é —Ñ–∞–π–ª: ${filePath}`);
    
    const { data: uploadData, error: uploadError } = await adminSupabase.storage
      .from('public')
      .upload(filePath, testFile);
    
    if (uploadError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${uploadError.message}`);
      return false;
    }
    
    console.log('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:', uploadData);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
    const { data: urlData } = adminSupabase.storage
      .from('public')
      .getPublicUrl(filePath);
    
    console.log('‚úÖ –ü—É–±–ª–∏—á–Ω—ã–π URL:', urlData.publicUrl);
    
    return true;
    
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testAdminCaseSave() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–£–Æ –°–û–•–†–ê–ù–ï–ù–ò–ï –ö–ï–ô–°–û–í –í –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–ò...\n');
  
  const saveWorks = await testCaseSave();
  const uploadWorks = await testImageUpload();
  
  console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
  console.log(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–µ–π—Å–æ–≤: ${saveWorks ? '–†–ê–ë–û–¢–ê–ï–¢' : '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}`);
  console.log(`‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${uploadWorks ? '–†–ê–ë–û–¢–ê–ï–¢' : '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}`);
  
  if (saveWorks && uploadWorks) {
    console.log('\nüéâ –í–°–ï –†–ê–ë–û–¢–ê–ï–¢!');
    console.log('‚úÖ API —Ñ—É–Ω–∫—Ü–∏–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
    console.log('üí° –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ');
  } else {
    console.log('\n‚ö†Ô∏è  –ü–†–û–ë–õ–ï–ú–´ –° API');
    console.log('üí° –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testAdminCaseSave();

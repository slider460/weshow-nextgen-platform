import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';
import { Button } from '../components/ui/button';
import { Alert, AlertDescription } from '../components/ui/alert';
import { AlertCircle, CheckCircle } from 'lucide-react';

const TestBlobImagesSimple: React.FC = () => {
  const [testResults, setTestResults] = useState<string[]>([]);

  const addResult = (message: string, isError = false) => {
    setTestResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);
  };

  const testDatabaseConnection = async () => {
    try {
      addResult('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
      
      // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      const response = await fetch('/api/health');
      if (response.ok) {
        addResult('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç');
      } else {
        addResult('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö', true);
      }
    } catch (error) {
      addResult(`‚ùå –û—à–∏–±–∫–∞: ${error}`, true);
    }
  };

  const testImageUpload = () => {
    addResult('üì§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    const canvas = document.createElement('canvas');
    canvas.width = 100;
    canvas.height = 100;
    const ctx = canvas.getContext('2d');
    
    if (ctx) {
      // –†–∏—Å—É–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
      ctx.fillStyle = '#4F46E5';
      ctx.fillRect(0, 0, 100, 100);
      ctx.fillStyle = 'white';
      ctx.font = '16px Arial';
      ctx.fillText('TEST', 25, 55);
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ blob
      canvas.toBlob((blob) => {
        if (blob) {
          addResult(`‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ: ${blob.size} –±–∞–π—Ç`);
          
          // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
          const reader = new FileReader();
          reader.onload = () => {
            const base64 = reader.result as string;
            addResult(`‚úÖ Base64 –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç: ${base64.length} —Å–∏–º–≤–æ–ª–æ–≤`);
          };
          reader.readAsDataURL(blob);
        } else {
          addResult('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', true);
        }
      }, 'image/png');
    } else {
      addResult('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è canvas', true);
    }
  };

  const clearResults = () => {
    setTestResults([]);
  };

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-4xl mx-auto space-y-6">
        <Card>
          <CardHeader>
            <CardTitle>–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã BLOB –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</CardTitle>
            <p className="text-gray-600">
              –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ë–î
            </p>
          </CardHeader>
          <CardContent className="space-y-6">
            
            {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
            <Alert>
              <AlertCircle className="h-4 w-4" />
              <AlertDescription>
                <strong>–ü–µ—Ä–µ–¥ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:</strong>
                <ol className="mt-2 ml-4 list-decimal space-y-1">
                  <li>SQL —Å–∫—Ä–∏–ø—Ç <code>create_images_table.sql</code> –≤ Supabase</li>
                  <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ <code>images</code> —Å–æ–∑–¥–∞–Ω–∞</li>
                  <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª–∏—Ç–∏–∫–∏ RLS –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã</li>
                </ol>
              </AlertDescription>
            </Alert>

            {/* –ö–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
            <div className="flex gap-4">
              <Button onClick={testDatabaseConnection}>
                –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
              </Button>
              <Button onClick={testImageUpload} variant="outline">
                –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
              </Button>
              <Button onClick={clearResults} variant="outline">
                –û—á–∏—Å—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
              </Button>
            </div>

            {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
            {testResults.length > 0 && (
              <Card>
                <CardHeader>
                  <CardTitle>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-1 max-h-64 overflow-y-auto">
                    {testResults.map((result, index) => (
                      <div key={index} className="text-sm font-mono">
                        {result}
                      </div>
                    ))}
                  </div>
                </CardContent>
              </Card>
            )}

            {/* –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ */}
            <Card>
              <CardHeader>
                <CardTitle>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <h4 className="font-semibold">1. –°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É images:</h4>
                  <p className="text-sm text-gray-600">
                    –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç <code>create_images_table.sql</code> –≤ Supabase SQL Editor
                  </p>
                </div>
                
                <div className="space-y-2">
                  <h4 className="font-semibold">2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã:</h4>
                  <p className="text-sm text-gray-600">
                    –í Supabase Dashboard ‚Üí Database ‚Üí Tables –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è —Ç–∞–±–ª–∏—Ü–∞ <code>images</code>
                  </p>
                </div>
                
                <div className="space-y-2">
                  <h4 className="font-semibold">3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É:</h4>
                  <p className="text-sm text-gray-600">
                    –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ <code>/test-blob-images</code> –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                  </p>
                </div>
              </CardContent>
            </Card>

          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default TestBlobImagesSimple;

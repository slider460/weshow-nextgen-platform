import React, { useState } from 'react';

const RestApiEquipmentTest = () => {
  const [result, setResult] = useState<string>('–ì–æ—Ç–æ–≤ –∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é');
  const [loading, setLoading] = useState(false);

  const testRestApi = async () => {
    setLoading(true);
    setResult('–¢–µ—Å—Ç–∏—Ä—É–µ–º REST API...');
    
    try {
      console.log('üîÑ RestApiEquipmentTest: –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç REST API...');
      
      const SUPABASE_URL = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
      const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE';
      
      const url = `${SUPABASE_URL}/rest/v1/homepage_equipment?select=*&is_visible=eq.true&order=sort_order.asc&limit=5`;
      
      console.log('üîÑ RestApiEquipmentTest: –î–µ–ª–∞–µ–º REST –∑–∞–ø—Ä–æ—Å...');
      console.log('üîÑ RestApiEquipmentTest: URL:', url);
      
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'apikey': SUPABASE_KEY,
          'Authorization': `Bearer ${SUPABASE_KEY}`,
          'Content-Type': 'application/json',
        },
      });

      console.log('üîÑ RestApiEquipmentTest: –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω, —Å—Ç–∞—Ç—É—Å:', response.status);

      if (!response.ok) {
        const errorText = await response.text();
        console.error('‚ùå RestApiEquipmentTest: HTTP –æ—à–∏–±–∫–∞:', response.status, errorText);
        setResult(`‚ùå HTTP –æ—à–∏–±–∫–∞ ${response.status}: ${errorText}`);
        return;
      }

      const data = await response.json();
      console.log('‚úÖ RestApiEquipmentTest: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', data);
      console.log('‚úÖ RestApiEquipmentTest: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:', data?.length || 0);
      
      setResult(`‚úÖ –£—Å–ø–µ—Ö! –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${data?.length || 0} –∑–∞–ø–∏—Å–µ–π —á–µ—Ä–µ–∑ REST API`);
      
    } catch (err) {
      console.error('‚ùå RestApiEquipmentTest: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:', err);
      setResult(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: ${err}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-2xl mx-auto">
        <h1 className="text-3xl font-bold text-gray-900 mb-6">
          üîß –¢–µ—Å—Ç REST API –¥–ª—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
        </h1>
        
        <div className="bg-white rounded-lg shadow-lg p-6 mb-6">
          <h2 className="text-xl font-semibold mb-4">–†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:</h2>
          <div className="bg-gray-50 p-4 rounded-lg">
            <p className="text-lg">{result}</p>
          </div>
        </div>

        <div className="text-center">
          <button
            onClick={testRestApi}
            disabled={loading}
            className={`px-6 py-3 rounded-lg font-semibold text-white ${
              loading 
                ? 'bg-gray-400 cursor-not-allowed' 
                : 'bg-green-500 hover:bg-green-600'
            }`}
          >
            {loading ? 'üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º...' : 'üöÄ –¢–µ—Å—Ç REST API'}
          </button>
        </div>

        <div className="mt-8 bg-blue-50 border border-blue-200 rounded-lg p-4">
          <h3 className="font-semibold text-blue-800 mb-2">üìã –≠—Ç–æ—Ç —Ç–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:</h3>
          <ul className="text-blue-700 space-y-1">
            <li>‚Ä¢ –ü—Ä—è–º–æ–π REST API –≤—ã–∑–æ–≤ (–∫–∞–∫ LogosContextRest)</li>
            <li>‚Ä¢ –û–±—Ö–æ–¥–∏—Ç Supabase –∫–ª–∏–µ–Ω—Ç</li>
            <li>‚Ä¢ –î–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–∂–µ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –∫–ª–∏–µ–Ω—Ç–æ–º</li>
            <li>‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ—á–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default RestApiEquipmentTest;

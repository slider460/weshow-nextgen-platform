import React, { useEffect, useState } from 'react';
import { useLogos } from '../contexts/LogosContextDB';
import { supabase } from '../config/supabase';
import { logger } from '../utils/logger';

const TestLogosLoad: React.FC = () => {
  const { state, getActiveLogos, forceRefresh } = useLogos();
  const [directDbData, setDirectDbData] = useState<any>(null);
  const [isLoadingDirect, setIsLoadingDirect] = useState(false);
  const [error, setError] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –±–∞–∑—ã –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
  const loadDirectFromDb = async () => {
    setIsLoadingDirect(true);
    setError(null);
    
    try {
      console.log('üîç –¢–ï–°–¢: –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø—ã –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
      logger.info('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–≥–æ—Ç–∏–ø—ã –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
      
      const { data, error } = await supabase
        .from('logos')
        .select('*')
        .order('sort_order', { ascending: true });
      
      console.log('üì° –¢–ï–°–¢: –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω');
      console.log('üìä –¢–ï–°–¢: error:', error);
      console.log('üìä –¢–ï–°–¢: data:', data);
      console.log('üìä –¢–ï–°–¢: data length:', data?.length);
      
      if (error) {
        console.error('‚ùå –¢–ï–°–¢: –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        logger.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        setError(`–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: ${error.message}`);
        return;
      }
      
      console.log('‚úÖ –¢–ï–°–¢: –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞–ø—Ä—è–º—É—é, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:', data?.length);
      logger.info('‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞–ø—Ä—è–º—É—é:', data);
      setDirectDbData(data);
      
    } catch (err) {
      console.error('‚ùå –¢–ï–°–¢: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–µ:', err);
      logger.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–µ:', err);
      setError(`–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    } finally {
      setIsLoadingDirect(false);
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    loadDirectFromDb();
  }, []);

  const activeLogos = getActiveLogos();

  return (
    <div style={{ 
      minHeight: '100vh', 
      background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',
      padding: '2rem'
    }}>
      <div style={{ maxWidth: '1200px', margin: '0 auto' }}>
        <h1 style={{ 
          fontSize: '2.5rem', 
          fontWeight: 'bold', 
          textAlign: 'center', 
          marginBottom: '2rem',
          color: '#1e293b'
        }}>
          üß™ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        </h1>

        {/* –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ */}
        <div style={{
          background: 'white',
          borderRadius: '1rem',
          padding: '1.5rem',
          marginBottom: '2rem',
          boxShadow: '0 4px 6px rgba(0,0,0,0.1)'
        }}>
          <h2 style={{ fontSize: '1.5rem', fontWeight: 'bold', marginBottom: '1rem', color: '#1e293b' }}>
            üìä –°—Ç–∞—Ç—É—Å LogosContextDB
          </h2>
          
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '1rem' }}>
            <div style={{ padding: '1rem', background: '#f8fafc', borderRadius: '0.5rem' }}>
              <div style={{ fontSize: '0.9rem', color: '#64748b', marginBottom: '0.5rem' }}>–ó–∞–≥—Ä—É–∑–∫–∞</div>
              <div style={{ fontSize: '1.2rem', fontWeight: 'bold', color: state.isLoading ? '#f59e0b' : '#10b981' }}>
                {state.isLoading ? '‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è' : '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ'}
              </div>
            </div>
            
            <div style={{ padding: '1rem', background: '#f8fafc', borderRadius: '0.5rem' }}>
              <div style={{ fontSize: '0.9rem', color: '#64748b', marginBottom: '0.5rem' }}>–í—Å–µ–≥–æ –ª–æ–≥–æ—Ç–∏–ø–æ–≤</div>
              <div style={{ fontSize: '1.2rem', fontWeight: 'bold', color: '#1e293b' }}>
                {state.logos.length}
              </div>
            </div>
            
            <div style={{ padding: '1rem', background: '#f8fafc', borderRadius: '0.5rem' }}>
              <div style={{ fontSize: '0.9rem', color: '#64748b', marginBottom: '0.5rem' }}>–ê–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤</div>
              <div style={{ fontSize: '1.2rem', fontWeight: 'bold', color: '#1e293b' }}>
                {activeLogos.length}
              </div>
            </div>
            
            <div style={{ padding: '1rem', background: '#f8fafc', borderRadius: '0.5rem' }}>
              <div style={{ fontSize: '0.9rem', color: '#64748b', marginBottom: '0.5rem' }}>–û—à–∏–±–∫–∞</div>
              <div style={{ fontSize: '1.2rem', fontWeight: 'bold', color: state.error ? '#ef4444' : '#10b981' }}>
                {state.error ? '‚ùå –ï—Å—Ç—å' : '‚úÖ –ù–µ—Ç'}
              </div>
            </div>
          </div>
          
          {state.error && (
            <div style={{
              marginTop: '1rem',
              padding: '1rem',
              background: '#fef2f2',
              border: '1px solid #fecaca',
              borderRadius: '0.5rem',
              color: '#dc2626'
            }}>
              <strong>–û—à–∏–±–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞:</strong> {state.error}
            </div>
          )}
        </div>

        {/* –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –±–∞–∑—ã */}
        <div style={{
          background: 'white',
          borderRadius: '1rem',
          padding: '1.5rem',
          marginBottom: '2rem',
          boxShadow: '0 4px 6px rgba(0,0,0,0.1)'
        }}>
          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>
            <h2 style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#1e293b' }}>
              üîó –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            </h2>
            <button
              onClick={loadDirectFromDb}
              disabled={isLoadingDirect}
              style={{
                background: isLoadingDirect ? '#9ca3af' : '#3b82f6',
                color: 'white',
                border: 'none',
                padding: '0.5rem 1rem',
                borderRadius: '0.5rem',
                cursor: isLoadingDirect ? 'not-allowed' : 'pointer',
                fontSize: '0.9rem',
                fontWeight: '500'
              }}
            >
              {isLoadingDirect ? '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...' : 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å'}
            </button>
          </div>
          
          {error && (
            <div style={{
              marginBottom: '1rem',
              padding: '1rem',
              background: '#fef2f2',
              border: '1px solid #fecaca',
              borderRadius: '0.5rem',
              color: '#dc2626'
            }}>
              <strong>–û—à–∏–±–∫–∞:</strong> {error}
            </div>
          )}
          
          {directDbData && (
            <div>
              <div style={{ fontSize: '1rem', color: '#64748b', marginBottom: '0.5rem' }}>
                –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: <strong>{directDbData.length}</strong>
              </div>
              <pre style={{
                background: '#f8fafc',
                padding: '1rem',
                borderRadius: '0.5rem',
                overflow: 'auto',
                fontSize: '0.8rem',
                border: '1px solid #e2e8f0'
              }}>
                {JSON.stringify(directDbData, null, 2)}
              </pre>
            </div>
          )}
        </div>

        {/* –õ–æ–≥–æ—Ç–∏–ø—ã –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ */}
        <div style={{
          background: 'white',
          borderRadius: '1rem',
          padding: '1.5rem',
          marginBottom: '2rem',
          boxShadow: '0 4px 6px rgba(0,0,0,0.1)'
        }}>
          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>
            <h2 style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#1e293b' }}>
              üé® –õ–æ–≥–æ—Ç–∏–ø—ã –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            </h2>
            <button
              onClick={() => forceRefresh()}
              style={{
                background: '#10b981',
                color: 'white',
                border: 'none',
                padding: '0.5rem 1rem',
                borderRadius: '0.5rem',
                cursor: 'pointer',
                fontSize: '0.9rem',
                fontWeight: '500'
              }}
            >
              üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            </button>
          </div>
          
          {activeLogos.length === 0 ? (
            <div style={{
              textAlign: 'center',
              padding: '2rem',
              color: '#64748b'
            }}>
              <div style={{ fontSize: '3rem', marginBottom: '1rem' }}>üì≠</div>
              <div style={{ fontSize: '1.2rem', fontWeight: 'bold', marginBottom: '0.5rem' }}>
                –õ–æ–≥–æ—Ç–∏–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
              </div>
              <div>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö</div>
            </div>
          ) : (
            <div style={{
              display: 'grid',
              gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',
              gap: '1rem'
            }}>
              {activeLogos.map((logo, index) => (
                <div
                  key={logo.id}
                  style={{
                    background: '#f8fafc',
                    border: '1px solid #e2e8f0',
                    borderRadius: '0.5rem',
                    padding: '1rem',
                    textAlign: 'center'
                  }}
                >
                  <div style={{ fontSize: '2rem', marginBottom: '0.5rem' }}>üè¢</div>
                  <div style={{ fontWeight: 'bold', marginBottom: '0.5rem' }}>{logo.name}</div>
                  <div style={{ fontSize: '0.8rem', color: '#64748b' }}>
                    ID: {logo.id}<br />
                    –ê–∫—Ç–∏–≤–µ–Ω: {logo.is_active ? '‚úÖ' : '‚ùå'}<br />
                    –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {logo.category || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div style={{
          background: 'rgba(59, 130, 246, 0.1)',
          border: '1px solid rgba(59, 130, 246, 0.2)',
          borderRadius: '1rem',
          padding: '1.5rem',
          color: '#1e40af'
        }}>
          <h3 style={{ fontSize: '1.2rem', fontWeight: 'bold', marginBottom: '1rem' }}>
            üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–µ
          </h3>
          <ol style={{ marginLeft: '1.5rem', lineHeight: '1.6' }}>
            <li>–û—Ç–∫—Ä–æ–π—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "üîÑ –û–±–Ω–æ–≤–∏—Ç—å" –¥–ª—è –ø—Ä—è–º–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –±–∞–∑—ã</li>
            <li>–ù–∞–∂–º–∏—Ç–µ "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ" –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞</li>
            <li>–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª <code>check_logos_database.sql</code></li>
            <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ <code>logos</code> —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ</li>
          </ol>
        </div>
      </div>
    </div>
  );
};

export default TestLogosLoad;

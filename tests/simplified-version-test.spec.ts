import { test, expect } from '@playwright/test';

test.describe('–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞', () => {
  test('–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã', async ({ page }) => {
    await page.goto('/');
    await page.waitForLoadState('networkidle');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const header = page.locator('header').first();
    await expect(header).toBeVisible();
    console.log('‚úÖ Header –Ω–∞–π–¥–µ–Ω');

    const heroSection = page.locator('section').first();
    await expect(heroSection).toBeVisible();
    console.log('‚úÖ Hero —Å–µ–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞');

    const footer = page.locator('footer').first();
    await expect(footer).toBeVisible();
    console.log('‚úÖ Footer –Ω–∞–π–¥–µ–Ω');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–±—Ä–∞–Ω—ã –ª–∏—à–Ω–∏–µ –±–ª–æ–∫–∏
    const bodyContent = await page.locator('body').textContent();
    const contentLength = bodyContent!.length;
    
    console.log(`üìä –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${contentLength} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –±–ª–æ–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–±—Ä–∞–Ω—ã
    const gameSection = page.locator('text="–ì–æ–Ω—è–π—Ç–µ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ"');
    const gameSectionVisible = await gameSection.isVisible().catch(() => false);
    expect(gameSectionVisible).toBe(false);
    console.log('‚úÖ –ò–≥—Ä–æ–≤–æ–π –±–ª–æ–∫ —É–±—Ä–∞–Ω');

    const servicesSection = page.locator('text="–£—Å–ª—É–≥–∏"').nth(1); // –í—Ç–æ—Ä–æ–π –±–ª–æ–∫ "–£—Å–ª—É–≥–∏"
    const servicesSectionVisible = await servicesSection.isVisible().catch(() => false);
    console.log('‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ —É—Å–ª—É–≥ —É–±—Ä–∞–Ω—ã');

    const portfolioSection = page.locator('text="–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ"').nth(1); // –í—Ç–æ—Ä–æ–π –±–ª–æ–∫ "–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ"
    const portfolioSectionVisible = await portfolioSection.isVisible().catch(() => false);
    console.log('‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —É–±—Ä–∞–Ω—ã');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫
    const consoleErrors: string[] = [];
    page.on('console', msg => {
      if (msg.type() === 'error') {
        consoleErrors.push(msg.text());
      }
    });

    console.log(`üìä –û—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏: ${consoleErrors.length}`);
    expect(consoleErrors.length).toBe(0);
  });

  test('–ù–∞–≤–∏–≥–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ', async ({ page }) => {
    await page.goto('/');
    await page.waitForLoadState('networkidle');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    const navLinks = page.locator('nav a');
    const linkCount = await navLinks.count();
    expect(linkCount).toBeGreaterThan(0);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫: ${linkCount}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ª—É–≥
    await page.click('text=–£—Å–ª—É–≥–∏');
    await page.waitForLoadState('networkidle');
    const servicesTitle = await page.title();
    expect(servicesTitle).toContain('WESHOW');
    console.log('‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ª—É–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç');

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —á–µ—Ä–µ–∑ URL
    await page.goto('/');
    await page.waitForLoadState('networkidle');
    const homeTitle = await page.title();
    expect(homeTitle).toContain('WESHOW');
    console.log('‚úÖ –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–∞–±–æ—Ç–∞–µ—Ç');
  });
});

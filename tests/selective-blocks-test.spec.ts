import { test, expect } from '@playwright/test';

test.describe('–¢–µ—Å—Ç —Å–µ–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –±–ª–æ–∫–æ–≤', () => {
  test('–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –±–ª–æ–∫–æ–≤', async ({ page }) => {
    await page.goto('/');
    await page.waitForLoadState('networkidle');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–≥—Ä–æ–≤–æ–π –±–ª–æ–∫ "–í–µ–ª–æ—Å–∏–ø–µ–¥–Ω—ã–µ –≥–æ–Ω–∫–∏" —É–±—Ä–∞–Ω
    const gameBlock = page.locator('text="–ì–æ–Ω—è–π—Ç–µ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ"');
    const gameBlockVisible = await gameBlock.isVisible().catch(() => false);
    expect(gameBlockVisible).toBe(false);
    console.log('‚úÖ –ò–≥—Ä–æ–≤–æ–π –±–ª–æ–∫ "–í–µ–ª–æ—Å–∏–ø–µ–¥–Ω—ã–µ –≥–æ–Ω–∫–∏" —É–±—Ä–∞–Ω');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–ª–æ–∫ "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á" —É–±—Ä–∞–Ω
    const solutionsBlock = page.locator('text="–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á"');
    const solutionsBlockVisible = await solutionsBlock.isVisible().catch(() => false);
    expect(solutionsBlockVisible).toBe(false);
    console.log('‚úÖ –ë–ª–æ–∫ "–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á" —É–±—Ä–∞–Ω');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–ª–æ–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
    const heroSection = page.locator('h1').first();
    const heroVisible = await heroSection.isVisible().catch(() => false);
    expect(heroVisible).toBe(true);
    console.log('‚úÖ Hero —Å–µ–∫—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const navLinks = page.locator('nav a');
    const linkCount = await navLinks.count();
    expect(linkCount).toBeGreaterThan(0);
    console.log(`‚úÖ –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: ${linkCount} —Å—Å—ã–ª–æ–∫`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—à–∏–±–æ–∫
    const consoleErrors: string[] = [];
    page.on('console', msg => {
      if (msg.type() === 'error') {
        consoleErrors.push(msg.text());
      }
    });

    console.log(`üìä –û—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏: ${consoleErrors.length}`);
    expect(consoleErrors.length).toBe(0);
  });

  test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞', async ({ page }) => {
    await page.goto('/');
    await page.waitForLoadState('networkidle');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–æ–ª—å—à–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏, –Ω–æ –º–µ–Ω—å—à–µ –ø–æ–ª–Ω–æ–π)
    const bodyContent = await page.locator('body').textContent();
    const contentLength = bodyContent!.length;
    
    console.log(`üìä –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${contentLength} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –±–æ–ª—å—à–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ (3,473) –Ω–æ –º–µ–Ω—å—à–µ –ø–æ–ª–Ω–æ–π (10,983)
    expect(contentLength).toBeGreaterThan(5000);
    expect(contentLength).toBeLessThan(12000);
    console.log('‚úÖ –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    const navLinks = page.locator('nav a');
    const linkCount = await navLinks.count();
    expect(linkCount).toBeGreaterThan(0);
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫: ${linkCount}`);
  });
});

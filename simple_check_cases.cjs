const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const SUPABASE_URL = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
const SUPABASE_SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTEzOTMyMywiZXhwIjoyMDc0NzE1MzIzfQ.KOCzZQGNqpGmuXxhuCjAtUPcD8qHr9Alti_uVejrRFs';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY);

async function checkCasesDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∫–µ–π—Å–æ–≤...\n');

  try {
    // 1. –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã cases
    console.log('1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É cases...');
    
    const { data: cases, error: casesError } = await supabase
      .from('cases')
      .select('*')
      .limit(1);

    if (casesError) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ cases –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', casesError.message);
      
      if (casesError.message.includes('relation "public.cases" does not exist')) {
        console.log('\nüìù –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É cases...');
        
        // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ REST API
        const createTableResponse = await fetch(`${SUPABASE_URL}/rest/v1/rpc/exec_sql`, {
          method: 'POST',
          headers: {
            'Authorization': `Bearer ${SUPABASE_SERVICE_KEY}`,
            'apikey': SUPABASE_SERVICE_KEY,
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            sql: `
              CREATE TABLE IF NOT EXISTS cases (
                id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
                title TEXT NOT NULL,
                client TEXT NOT NULL,
                year TEXT NOT NULL,
                description TEXT,
                results TEXT[],
                technologies TEXT[],
                image_url TEXT,
                video_url TEXT,
                is_visible BOOLEAN DEFAULT true,
                sort_order INTEGER DEFAULT 0,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
              );
            `
          })
        });

        if (createTableResponse.ok) {
          console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ cases —Å–æ–∑–¥–∞–Ω–∞');
        } else {
          const errorText = await createTableResponse.text();
          console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã:', errorText);
        }
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ cases —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:', cases.length);
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
    console.log('\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ...');
    
    const { data: allCases, error: allCasesError } = await supabase
      .from('cases')
      .select('*')
      .order('sort_order', { ascending: true });

    if (allCasesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–µ–π—Å–æ–≤:', allCasesError);
      return;
    }

    console.log('üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–µ–π—Å–æ–≤:', allCases.length);
    
    if (allCases.length === 0) {
      console.log('\nüìù –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–µ–π—Å—ã...');
      
      const testCases = [
        {
          title: '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –≤—ã—Å—Ç–∞–≤–∫–∞ "–¶–∏—Ñ—Ä–æ–≤–æ–µ –±—É–¥—É—â–µ–µ"',
          client: '–¢–µ—Ö–Ω–æ–ø–∞—Ä–∫ "–°–∫–æ–ª–∫–æ–≤–æ"',
          year: '2024',
          description: '–°–æ–∑–¥–∞–Ω–∏–µ –∏–º–º–µ—Ä—Å–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º 3D-–ø—Ä–æ–µ–∫—Ü–∏–π, –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç–µ–Ω –∏ VR-–∑–æ–Ω—ã –¥–ª—è –≤—ã—Å—Ç–∞–≤–∫–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –±—É–¥—É—â–µ–≥–æ',
          results: ['15,000+ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π', '98% –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤', '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è –Ω–∞ 40%'],
          technologies: ['3D Mapping', 'VR/AR', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —Å–µ–Ω—Å–æ—Ä—ã', '–ü—Ä–æ–µ–∫—Ü–∏–æ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ'],
          image_url: '/lovable-uploads/01b05963-12d9-42c2-b515-e67dd048540f.png',
          is_visible: true,
          sort_order: 1
        },
        {
          title: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ Samsung',
          client: 'Samsung Electronics',
          year: '2024',
          description: '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–æ–Ω–∞–º–∏ –∏ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–º–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è–º–∏',
          results: ['2,500 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', '15 –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–æ–Ω', '–ü—Ä—è–º–∞—è —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—è –¥–ª—è 10,000+ –∑—Ä–∏—Ç–µ–ª–µ–π'],
          technologies: ['LED —ç–∫—Ä–∞–Ω—ã', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏', '–°–∏—Å—Ç–µ–º—ã –∑–≤—É–∫–∞', '–°–≤–µ—Ç–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ'],
          image_url: '/lovable-uploads/samsung-event.jpg',
          is_visible: true,
          sort_order: 2
        },
        {
          title: '–í—ã—Å—Ç–∞–≤–∫–∞ "–ù–µ—Ñ—Ç—å –∏ –≥–∞–∑"',
          client: '–û–û–û "–ì–∞–∑–ø—Ä–æ–º"',
          year: '2023',
          description: '–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–µ–Ω–¥–∞ —Å 3D-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
          results: ['50,000+ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π', '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ —Å—Ç–µ–Ω–¥—É –Ω–∞ 60%', '–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã "–õ—É—á—à–∏–π —Å—Ç–µ–Ω–¥"'],
          technologies: ['3D –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã', '–°–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏'],
          image_url: '/lovable-uploads/gazprom-stand.jpg',
          is_visible: true,
          sort_order: 3
        }
      ];

      for (const testCase of testCases) {
        const { error: insertError } = await supabase
          .from('cases')
          .insert(testCase);

        if (insertError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–µ–π—Å–∞:', insertError);
        } else {
          console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∫–µ–π—Å: ${testCase.title}`);
        }
      }
    } else {
      console.log('\nüìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–µ–π—Å—ã:');
      allCases.forEach((caseItem, index) => {
        console.log(`${index + 1}. ${caseItem.title} (${caseItem.year})`);
        console.log(`   –ö–ª–∏–µ–Ω—Ç: ${caseItem.client}`);
        console.log(`   –í–∏–¥–∏–º—ã–π: ${caseItem.is_visible ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`   –ü–æ—Ä—è–¥–æ–∫: ${caseItem.sort_order}`);
        console.log('');
      });
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º—ã–µ –∫–µ–π—Å—ã (–∫–∞–∫ –≤ —Ö—É–∫–µ useCases)
    console.log('3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏–¥–∏–º—ã–µ –∫–µ–π—Å—ã...');
    
    const { data: visibleCases, error: visibleError } = await supabase
      .from('cases')
      .select('*')
      .eq('is_visible', true)
      .order('sort_order', { ascending: true });

    if (visibleError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∏–¥–∏–º—ã—Ö –∫–µ–π—Å–æ–≤:', visibleError);
    } else {
      console.log('‚úÖ –í–∏–¥–∏–º—ã—Ö –∫–µ–π—Å–æ–≤:', visibleCases.length);
      
      if (visibleCases.length > 0) {
        console.log('\nüìã –í–∏–¥–∏–º—ã–µ –∫–µ–π—Å—ã:');
        visibleCases.forEach((caseItem, index) => {
          console.log(`${index + 1}. ${caseItem.title}`);
          console.log(`   ID: ${caseItem.id}`);
          console.log(`   –ö–ª–∏–µ–Ω—Ç: ${caseItem.client}`);
          console.log(`   –ì–æ–¥: ${caseItem.year}`);
          console.log(`   –ü–æ—Ä—è–¥–æ–∫: ${caseItem.sort_order}`);
          console.log('');
        });
      }
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º REST API (–∫–∞–∫ –≤ —Ö—É–∫–µ useCases)
    console.log('4. –¢–µ—Å—Ç–∏—Ä—É–µ–º REST API...');
    
    const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE';
    
    const url = `${SUPABASE_URL}/rest/v1/cases?select=*&is_visible=eq.true&order=sort_order.asc`;
    
    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
        'Content-Type': 'application/json',
      },
    });

    if (response.ok) {
      const restData = await response.json();
      console.log('‚úÖ REST API —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ª—É—á–µ–Ω–æ –∫–µ–π—Å–æ–≤:', restData.length);
    } else {
      const errorText = await response.text();
      console.log('‚ùå REST API –æ—à–∏–±–∫–∞:', response.status, errorText);
    }

    console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
checkCasesDatabase();










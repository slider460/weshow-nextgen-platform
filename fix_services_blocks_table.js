// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã services_blocks —á–µ—Ä–µ–∑ Supabase API
import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE';

const supabase = createClient(supabaseUrl, supabaseKey);

async function createServicesBlocksTable() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã services_blocks...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã...');
    const { data: existingData, error: checkError } = await supabase
      .from('services_blocks')
      .select('count')
      .limit(1);

    if (!checkError) {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ services_blocks —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!');
      return;
    }

    console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º...');

    // SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
    const sqlScript = `
      -- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –±–ª–æ–∫–æ–≤ —É—Å–ª—É–≥ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
      CREATE TABLE IF NOT EXISTS services_blocks (
        id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        description TEXT NOT NULL,
        icon VARCHAR(50) NOT NULL DEFAULT 'Monitor',
        color VARCHAR(50) NOT NULL DEFAULT 'from-blue-500 to-cyan-500',
        link VARCHAR(255) NOT NULL DEFAULT '',
        features TEXT[] NOT NULL DEFAULT '{}',
        is_visible BOOLEAN NOT NULL DEFAULT true,
        sort_order INTEGER NOT NULL DEFAULT 0,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      );

      -- –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤
      CREATE INDEX IF NOT EXISTS idx_services_blocks_sort_order ON services_blocks(sort_order);
      CREATE INDEX IF NOT EXISTS idx_services_blocks_visible ON services_blocks(is_visible);

      -- –í—Å—Ç–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      INSERT INTO services_blocks (title, description, icon, color, link, features, is_visible, sort_order) VALUES
      ('–ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–∏—Å–ø–ª–µ–∏, –≤–∏–¥–µ–æ—Å—Ç–µ–Ω—ã –∏ –ø—Ä–æ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞', 'Monitor', 'from-blue-500 to-cyan-500', 'multimedia', ARRAY['LED-–≤–∏–¥–µ–æ—Å—Ç–µ–Ω—ã', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏', '–ü—Ä–æ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã'], true, 1),
      ('–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ü–û –∏ –∏–≥—Ä', '–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∏–≥—Ä –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π', 'Smartphone', 'from-purple-500 to-pink-500', 'development', ARRAY['–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∏–≥—Ä—ã', 'AR/VR —Ä–µ—à–µ–Ω–∏—è'], true, 2),
      ('–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ', '–ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º', 'Users', 'from-green-500 to-emerald-500', 'technical-support', ARRAY['24/7 –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥', '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞', '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞'], true, 3),
      ('–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º—É–ª—å—Ç–∏–º–µ–¥–∏–∏', '–û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º –≤ –µ–¥–∏–Ω—É—é —ç–∫–æ—Å–∏—Å—Ç–µ–º—É', 'Settings', 'from-orange-500 to-red-500', 'complex-solutions', ARRAY['–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è', '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è', '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º'], true, 4),
      ('–ë—Ä–µ–Ω–¥–∏–Ω–≥ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π', '–°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –¥–ª—è –≤–∞—à–∏—Ö —Å–æ–±—ã—Ç–∏–π', 'Palette', 'from-indigo-500 to-purple-500', 'design', ARRAY['–í–∏–∑—É–∞–ª—å–Ω–∞—è –∏–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã', '–¶–∏—Ñ—Ä–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è'], true, 5),
      ('–ê—Ä–µ–Ω–¥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', '–í—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è', 'Zap', 'from-yellow-500 to-orange-500', 'equipment-rental', ARRAY['–ì–∏–±–∫–∏–µ —É—Å–ª–æ–≤–∏—è', '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞', '–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞'], true, 6)
      ON CONFLICT DO NOTHING;

      -- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
      CREATE OR REPLACE FUNCTION update_updated_at_column()
      RETURNS TRIGGER AS $$
      BEGIN
          NEW.updated_at = NOW();
          RETURN NEW;
      END;
      $$ language 'plpgsql';

      -- –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
      DROP TRIGGER IF EXISTS update_services_blocks_updated_at ON services_blocks;
      CREATE TRIGGER update_services_blocks_updated_at
          BEFORE UPDATE ON services_blocks
          FOR EACH ROW
          EXECUTE FUNCTION update_updated_at_column();

      -- –í–∫–ª—é—á–µ–Ω–∏–µ RLS (Row Level Security)
      ALTER TABLE services_blocks ENABLE ROW LEVEL SECURITY;

      -- –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫ RLS –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ)
      CREATE POLICY "Allow anonymous read access" ON services_blocks
          FOR SELECT USING (true);

      -- –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫ RLS –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø)
      CREATE POLICY "Allow authenticated full access" ON services_blocks
          FOR ALL USING (auth.role() = 'authenticated');
    `;

    // –í—ã–ø–æ–ª–Ω—è–µ–º SQL —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ RPC
    console.log('üîß –í—ã–ø–æ–ª–Ω—è–µ–º SQL —Å–∫—Ä–∏–ø—Ç...');
    const { data, error } = await supabase.rpc('exec_sql', { sql: sqlScript });

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL:', error);
      throw error;
    }

    console.log('‚úÖ SQL —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã...');
    const { data: testData, error: testError } = await supabase
      .from('services_blocks')
      .select('*')
      .limit(1);

    if (testError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã:', testError);
      throw testError;
    }

    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ services_blocks —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π:', testData?.length || 0);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.log('\nüìã –†—É—á–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ https://supabase.com/dashboard');
    console.log('2. –í–æ–π–¥–∏—Ç–µ –≤ –ø—Ä–æ–µ–∫—Ç WESHOW');
    console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor');
    console.log('4. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ create_services_blocks_table.sql');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
createServicesBlocksTable();

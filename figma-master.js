import { execSync } from 'child_process';
import fs from 'fs';

console.log('üé® Figma Master - –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏');
console.log('==========================================\n');

async function runFigmaIntegration() {
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Figma...');
    if (!process.env.FIGMA_ACCESS_TOKEN || process.env.FIGMA_ACCESS_TOKEN === 'your_token_here') {
      console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
      console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–æ–∫–µ–Ω–∞...');
      
      try {
        execSync('node setup-figma-token.js', { stdio: 'inherit' });
      } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: node setup-figma-token.js');
        return;
      }
    } else {
      console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    }

    // 2. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Figma
    console.log('\n2Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Figma...');
    try {
      execSync('node figma-direct-connect.js', { stdio: 'inherit' });
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Figma');
      return;
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
    if (!fs.existsSync('figma-data.json')) {
      console.log('‚ùå –§–∞–π–ª figma-data.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // 4. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    console.log('\n3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...');
    try {
      execSync('node figma-to-react.js', { stdio: 'inherit' });
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞');
      return;
    }

    // 5. –û–±–Ω–æ–≤–ª—è–µ–º App.tsx
    console.log('\n4Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤...');
    try {
      updateAppRoutes();
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤');
      return;
    }

    console.log('\nüéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üì± –û—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8083/figma-demo');
    console.log('üîß –ò–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ –º–∞—Ä—à—Ä—É—Ç –≤—Ä—É—á–Ω—É—é –≤ App.tsx');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

function updateAppRoutes() {
  const appPath = 'src/App.tsx';
  
  if (!fs.existsSync(appPath)) {
    console.log('‚ùå –§–∞–π–ª App.tsx –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  let appContent = fs.readFileSync(appPath, 'utf8');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç
  if (!appContent.includes('FigmaDemoPage')) {
    const importMatch = appContent.match(/(import.*from.*;\s*)+/);
    if (importMatch) {
      const lastImport = importMatch[0].split('\n').pop();
      appContent = appContent.replace(lastImport, lastImport + '\nimport FigmaDemoPage from \'./pages/FigmaDemoPage\';');
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç
  if (!appContent.includes('/figma-demo')) {
    const routeMatch = appContent.match(/(<Route.*\/>[\s\S]*?<\/Route>)/);
    if (routeMatch) {
      const lastRoute = routeMatch[0].split('\n').pop();
      appContent = appContent.replace(lastRoute, lastRoute + '\n        <Route path="/figma-demo" element={<FigmaDemoPage />} />');
    }
  }
  
  fs.writeFileSync(appPath, appContent);
  console.log('‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
}

// –ó–∞–ø—É—Å–∫
runFigmaIntegration();





#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js';

// Supabase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const supabaseUrl = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTEzOTMyMywiZXhwIjoyMDc0NzE1MzIzfQ.KOCzZQGNqpGmuXxhuCjAtUPcD8qHr9Alti_uVejrRFs';

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å service role –∫–ª—é—á–æ–º
const supabase = createClient(supabaseUrl, supabaseServiceKey, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
async function findAdminUser() {
  console.log('üîç –ò—â—É –∞–¥–º–∏–Ω–∞ –≤ —Ä–∞–∑–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö...');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º auth.users (—Å–∏—Å—Ç–µ–º–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ Supabase)
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é auth.users:');
    const { data: authUsers, error: authUsersError } = await supabase.auth.admin.listUsers();
    
    if (authUsersError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è auth.users: ${authUsersError.message}`);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ auth.users: ${authUsers.users?.length || 0}`);
      
      const adminAuthUser = authUsers.users?.find(u => u.email === 'admin@weshow.ru');
      if (adminAuthUser) {
        console.log(`‚úÖ –ê–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω –≤ auth.users: ${adminAuthUser.email} (ID: ${adminAuthUser.id})`);
      } else {
        console.log(`‚ùå –ê–¥–º–∏–Ω –ù–ï –Ω–∞–π–¥–µ–Ω –≤ auth.users`);
      }
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É users
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é —Ç–∞–±–ª–∏—Ü—É users:');
    const { data: users, error: usersError } = await supabase
      .from('users')
      .select('*');
      
    if (usersError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è users: ${usersError.message}`);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ users: ${users?.length || 0}`);
      users?.forEach((user, index) => {
        console.log(`   ${index + 1}. ${user.email || 'No email'} (ID: ${user.id})`);
      });
      
      const adminUser = users?.find(u => u.email === 'admin@weshow.ru');
      if (adminUser) {
        console.log(`‚úÖ –ê–¥–º–∏–Ω –Ω–∞–π–¥–µ–Ω –≤ users: ${adminUser.email} (ID: ${adminUser.id})`);
      } else {
        console.log(`‚ùå –ê–¥–º–∏–Ω –ù–ï –Ω–∞–π–¥–µ–Ω –≤ users`);
      }
    }
    
    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É user_profiles
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é —Ç–∞–±–ª–∏—Ü—É user_profiles:');
    const { data: profiles, error: profilesError } = await supabase
      .from('user_profiles')
      .select('*');
      
    if (profilesError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è user_profiles: ${profilesError.message}`);
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –≤ user_profiles: ${profiles?.length || 0}`);
      profiles?.forEach((profile, index) => {
        console.log(`   ${index + 1}. ID: ${profile.id}, User ID: ${profile.user_id}, Name: ${profile.full_name}, Role: ${profile.role}`);
      });
    }
    
    // 4. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!authUsers.users?.find(u => u.email === 'admin@weshow.ru')) {
      console.log('\n4Ô∏è‚É£ –°–æ–∑–¥–∞—é –∞–¥–º–∏–Ω–∞ –≤ auth.users...');
      
      const { data: newUser, error: createError } = await supabase.auth.admin.createUser({
        email: 'admin@weshow.ru',
        password: 'password',
        email_confirm: true,
        user_metadata: {
          full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
        }
      });
      
      if (createError) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∞: ${createError.message}`);
      } else {
        console.log(`‚úÖ –ê–¥–º–∏–Ω —Å–æ–∑–¥–∞–Ω: ${newUser.user?.email} (ID: ${newUser.user?.id})`);
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        if (newUser.user?.id) {
          const { data: newProfile, error: profileError } = await supabase
            .from('user_profiles')
            .insert({
              id: newUser.user.id,
              user_id: newUser.user.id,
              full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
              role: 'admin'
            })
            .select()
            .single();
            
          if (profileError) {
            console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${profileError.message}`);
          } else {
            console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω: ${newProfile.full_name}`);
          }
        }
      }
    }
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞
async function testLogin() {
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é –≤—Ö–æ–¥ –∞–¥–º–∏–Ω–∞...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Ö–æ–¥–∞
    const client = createClient(supabaseUrl, 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE');
    
    const { data: authData, error: authError } = await client.auth.signInWithPassword({
      email: 'admin@weshow.ru',
      password: 'password'
    });
    
    if (authError) {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${authError.message}`);
      return false;
    } else {
      console.log(`‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω: ${authData.user?.email} (ID: ${authData.user?.id})`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
      const { data: profile, error: profileError } = await client
        .from('user_profiles')
        .select('*')
        .eq('id', authData.user?.id)
        .maybeSingle();
        
      if (profileError) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${profileError.message}`);
        return false;
      } else if (profile) {
        console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω: ${profile.full_name} (${profile.role})`);
        return true;
      } else {
        console.log(`‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        return false;
      }
    }
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: ${error.message}`);
    return false;
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function findAndFixAdmin() {
  console.log('üöÄ –ü–û–ò–°–ö –ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ê–î–ú–ò–ù–ê...\n');
  
  await findAdminUser();
  
  const loginWorks = await testLogin();
  
  if (loginWorks) {
    console.log('\nüéâ –ê–î–ú–ò–ù –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!');
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ auth.users');
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –≤ user_profiles');
    console.log('‚úÖ –í—Ö–æ–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω');
    console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å!');
  } else {
    console.log('\n‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å');
  }
}

// –ó–∞–ø—É—Å–∫
findAndFixAdmin();



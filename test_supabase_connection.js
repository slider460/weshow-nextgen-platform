import { createClient } from '@supabase/supabase-js';

// Supabase configuration
const supabaseUrl = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE';

// Create Supabase client
const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testConnection() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã news
    const { data: newsData, error: newsError } = await supabase
      .from('news')
      .select('*')
      .limit(1);
    
    if (newsError) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ news –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', newsError.message);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ blog_posts
      const { data: blogData, error: blogError } = await supabase
        .from('blog_posts')
        .select('*')
        .limit(1);
      
      if (blogError) {
        console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ blog_posts –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', blogError.message);
        console.log('üìã –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã –≤ Supabase Dashboard');
        console.log('üåê –û—Ç–∫—Ä–æ–π—Ç–µ: https://supabase.com/dashboard/project/zbykhdjqrtqftfitbvbt');
        console.log('üìù –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ create_news_blog_tables.sql');
      } else {
        console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ blog_posts —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ news —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π:', newsData.length);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â–µ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const { data: testData, error: testError } = await supabase
      .from('_supabase_migrations')
      .select('*')
      .limit(1);
    
    if (testError) {
      console.log('‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –º–∏–≥—Ä–∞—Ü–∏—è–º:', testError.message);
    } else {
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }
    
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testConnection();

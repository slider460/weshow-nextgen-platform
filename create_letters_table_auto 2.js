#!/usr/bin/env node

const { createClient } = require('@supabase/supabase-js');
const { exec } = require('child_process');

const SUPABASE_URL = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
const SUPABASE_SERVICE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1OTEzOTMyMywiZXhwIjoyMDc0NzE1MzIzfQ.KOCzZQGNqpGmuXxhuCjAtUPcD8qHr9Alti_uVejrRFs';

const supabaseAdmin = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

async function createLettersTable() {
  try {
    console.log('üîß –ü—Ä–æ–≤–µ—Ä—è—é —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã letters_certificates...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞
    const { data: existingData, error: checkError } = await supabaseAdmin
      .from('letters_certificates')
      .select('id')
      .limit(1);

    if (checkError) {
      if (checkError.message.includes('relation') && checkError.message.includes('does not exist')) {
        console.log('üìã –¢–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–æ–∑–¥–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏...');
        
        // SQL –∫–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        const createSQL = `-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã letters_certificates
CREATE TABLE IF NOT EXISTS letters_certificates (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  image_url TEXT,
  document_url TEXT,
  type VARCHAR(50) NOT NULL CHECK (type IN ('letter', 'certificate', 'award', 'diploma')),
  issuer VARCHAR(255) NOT NULL,
  issued_date DATE,
  is_visible BOOLEAN DEFAULT true,
  sort_order INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –í–∫–ª—é—á–µ–Ω–∏–µ RLS
ALTER TABLE letters_certificates ENABLE ROW LEVEL SECURITY;

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
CREATE POLICY "Anyone can view visible letters and certificates" ON letters_certificates
  FOR SELECT USING (is_visible = true);

CREATE POLICY "Admins can manage letters and certificates" ON letters_certificates
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE users.id = auth.uid() 
      AND users.role = 'admin'
    )
  );

-- –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT INTO letters_certificates (title, description, type, issuer, issued_date, sort_order) VALUES
('–ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –ì–∞–∑–ø—Ä–æ–º', '–ó–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞', 'letter', '–ü–ê–û –ì–∞–∑–ø—Ä–æ–º', '2024-01-15', 1),
('–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞—á–µ—Å—Ç–≤–∞', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º', 'certificate', 'ISO International', '2024-02-20', 2),
('–î–∏–ø–ª–æ–º –∑–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', '–î–∏–ø–ª–æ–º –∑–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞', 'diploma', '–†–æ—Å—Å–∏–π—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞', '2024-03-10', 3),
('–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –ø—Ä–æ–µ–∫—Ç', '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –≥–æ–¥–∞', 'award', '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤', '2024-04-05', 4);`;

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º SQL –≤ —Ñ–∞–π–ª
        const fs = require('fs');
        fs.writeFileSync('CREATE_LETTERS_TABLE.sql', createSQL);
        console.log('‚úÖ SQL –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª CREATE_LETTERS_TABLE.sql');
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º Supabase Dashboard
        const dashboardUrl = 'https://supabase.com/dashboard/project/zbykhdjqrtqftfitbvbt/sql';
        console.log('üåê –û—Ç–∫—Ä—ã–≤–∞—é Supabase Dashboard...');
        
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä (—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ macOS, Windows, Linux)
        const openCommand = process.platform === 'darwin' ? 'open' : 
                           process.platform === 'win32' ? 'start' : 'xdg-open';
        
        exec(`${openCommand} "${dashboardUrl}"`, (error) => {
          if (error) {
            console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
            console.log('üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é:', dashboardUrl);
          } else {
            console.log('‚úÖ Supabase Dashboard –æ—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
          }
        });
        
        console.log('\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:');
        console.log('1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ CREATE_LETTERS_TABLE.sql');
        console.log('2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ SQL Editor –≤ Supabase Dashboard');
        console.log('3. –ù–∞–∂–º–∏—Ç–µ "Run" –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è');
        console.log('4. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –≤–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞');
        
        // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
        setTimeout(async () => {
          console.log('\n‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã...');
          await checkTableAfterCreation();
        }, 5000);
        
      } else {
        throw checkError;
      }
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ letters_certificates —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      await addTestData();
    }

  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

async function checkTableAfterCreation() {
  try {
    const { data, error } = await supabaseAdmin
      .from('letters_certificates')
      .select('id')
      .limit(1);

    if (error) {
      console.log('‚è≥ –¢–∞–±–ª–∏—Ü–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...');
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ letters_certificates —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
      await addTestData();
    }
  } catch (error) {
    console.log('‚è≥ –¢–∞–±–ª–∏—Ü–∞ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...');
  }
}

async function addTestData() {
  try {
    console.log('üîß –î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...');
    
    const testData = [
      {
        title: '–ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –ì–∞–∑–ø—Ä–æ–º',
        description: '–ó–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞',
        type: 'letter',
        issuer: '–ü–ê–û –ì–∞–∑–ø—Ä–æ–º',
        issued_date: '2024-01-15',
        sort_order: 1
      },
      {
        title: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞—á–µ—Å—Ç–≤–∞',
        description: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º',
        type: 'certificate',
        issuer: 'ISO International',
        issued_date: '2024-02-20',
        sort_order: 2
      },
      {
        title: '–î–∏–ø–ª–æ–º –∑–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏',
        description: '–î–∏–ø–ª–æ–º –∑–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞',
        type: 'diploma',
        issuer: '–†–æ—Å—Å–∏–π—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞',
        issued_date: '2024-03-10',
        sort_order: 3
      },
      {
        title: '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –ø—Ä–æ–µ–∫—Ç',
        description: '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –≥–æ–¥–∞',
        type: 'award',
        issuer: '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤',
        issued_date: '2024-04-05',
        sort_order: 4
      }
    ];

    const { data, error } = await supabaseAdmin
      .from('letters_certificates')
      .insert(testData);

    if (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error.message);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
      console.log('üéâ –¢–∞–±–ª–∏—Ü–∞ letters_certificates –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
    }
  } catch (error) {
    console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
createLettersTable();

// –¢–µ—Å—Ç Figma API —Å —Ä–µ–∞–ª—å–Ω—ã–º –∫–ª—é—á–æ–º
import https from 'https';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const FIGMA_API_BASE = 'https://api.figma.com/v1';
const FIGMA_DOCUMENT_ID = 'if9cW5Ga1xyeUTGYc2ea9K'; // ID –∏–∑ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–∏

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API —Å —Ç–æ–∫–µ–Ω–æ–º
async function testFigmaAPIWithToken(token) {
  console.log('üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Figma API —Å —Ç–æ–∫–µ–Ω–æ–º...');
  
  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    console.log('üìä –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
    const userResponse = await fetch(`${FIGMA_API_BASE}/me`, {
      method: 'GET',
      headers: {
        'X-Figma-Token': token
      }
    });
    
    if (userResponse.ok) {
      const userData = await userResponse.json();
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', userData.email);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userResponse.status, userResponse.statusText);
    }
    
    // –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ
    console.log('\nüìä –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ–∫—É–º–µ–Ω—Ç–µ');
    const docResponse = await fetch(`${FIGMA_API_BASE}/files/${FIGMA_DOCUMENT_ID}`, {
      method: 'GET',
      headers: {
        'X-Figma-Token': token
      }
    });
    
    if (docResponse.ok) {
      const docData = await docResponse.json();
      console.log('‚úÖ –î–æ–∫—É–º–µ–Ω—Ç:', docData.name);
      console.log('üìÑ –°—Ç—Ä–∞–Ω–∏—Ü:', docData.document.children.length);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞:', docResponse.status, docResponse.statusText);
    }
    
    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    console.log('\nüìä –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    const imagesResponse = await fetch(`${FIGMA_API_BASE}/images/${FIGMA_DOCUMENT_ID}?ids=287-2&format=png`, {
      method: 'GET',
      headers: {
        'X-Figma-Token': token
      }
    });
    
    if (imagesResponse.ok) {
      const imagesData = await imagesResponse.json();
      console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—É—á–µ–Ω—ã');
      console.log('üñºÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:', Object.keys(imagesData.images).length);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:', imagesResponse.status, imagesResponse.statusText);
    }
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ API:', error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞ —Ç–æ–∫–µ–Ω–∞
function promptForToken() {
  console.log('üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à Figma Personal Access Token:');
  console.log('üí° –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ –≤ Figma: Settings > Developer > Personal Access Tokens');
  console.log('‚ö†Ô∏è  –¢–æ–∫–µ–Ω –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è');
  
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ readline –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–± –≤–≤–æ–¥–∞
  console.log('\nüìù –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env.local —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º:');
  console.log('FIGMA_ACCESS_TOKEN=your_token_here');
  console.log('\n–ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ: node figma-api-test.js --token=your_token_here');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –¢–µ—Å—Ç Figma API\n');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
  const args = process.argv.slice(2);
  const tokenArg = args.find(arg => arg.startsWith('--token='));
  
  if (tokenArg) {
    const token = tokenArg.split('=')[1];
    await testFigmaAPIWithToken(token);
  } else {
    promptForToken();
  }
}

// –ó–∞–ø—É—Å–∫
main().catch(console.error);
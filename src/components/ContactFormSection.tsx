import { useState } from "react";
import { Button } from "../components/ui/button";
import { Input } from "../components/ui/input";
import { Textarea } from "../components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../components/ui/select";
import { Phone, Mail, MapPin, Clock, Send, CheckCircle, AlertCircle, Eye, EyeOff } from "lucide-react";

interface FormErrors {
  name?: string;
  email?: string;
  phone?: string;
  company?: string;
  service?: string;
  message?: string;
}

const ContactFormSection = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    company: "",
    service: "",
    message: ""
  });
  const [errors, setErrors] = useState<FormErrors>({});
  const [isSubmitted, setIsSubmitted] = useState(false);
  const [showPassword, setShowPassword] = useState(false);

  // –í–∞–ª–∏–¥–∞—Ü–∏—è email
  const validateEmail = (email: string): boolean => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ä–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç)
  const validatePhone = (phone: string): boolean => {
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
    const cleanPhone = phone.replace(/\D/g, '');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–µ—Ñ–∏–∫—Å–∞
    if (cleanPhone.startsWith('7') || cleanPhone.startsWith('8')) {
      // –î–ª—è –Ω–æ–º–µ—Ä–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å 7 –∏–ª–∏ 8, –ø—Ä–æ–≤–µ—Ä—è–µ–º 11 —Ü–∏—Ñ—Ä (—Å –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã)
      return cleanPhone.length === 11;
    } else {
      // –î–ª—è –Ω–æ–º–µ—Ä–æ–≤, –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å 9, –ø—Ä–æ–≤–µ—Ä—è–µ–º 10 —Ü–∏—Ñ—Ä (–±–µ–∑ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã)
      return cleanPhone.length === 10;
    }
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ
  const formatPhone = (value: string): string => {
    const cleanValue = value.replace(/\D/g, '');
    
    if (cleanValue.length === 0) return '';
    
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 7, –¥–æ–±–∞–≤–ª—è–µ–º +7
    if (cleanValue.startsWith('7')) {
      if (cleanValue.length === 1) return `+7`;
      if (cleanValue.length <= 4) return `+7 (${cleanValue.slice(1, 4)}`;
      if (cleanValue.length <= 7) return `+7 (${cleanValue.slice(1, 4)}) ${cleanValue.slice(4, 7)}`;
      if (cleanValue.length <= 9) return `+7 (${cleanValue.slice(1, 4)}) ${cleanValue.slice(4, 7)}-${cleanValue.slice(7, 9)}`;
      return `+7 (${cleanValue.slice(1, 4)}) ${cleanValue.slice(4, 7)}-${cleanValue.slice(7, 9)}-${cleanValue.slice(9, 11)}`;
    }
    
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 8, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
    if (cleanValue.startsWith('8')) {
      if (cleanValue.length === 1) return `8`;
      if (cleanValue.length <= 4) return `8 (${cleanValue.slice(1, 4)}`;
      if (cleanValue.length <= 7) return `8 (${cleanValue.slice(1, 4)}) ${cleanValue.slice(4, 7)}`;
      if (cleanValue.length <= 9) return `8 (${cleanValue.slice(1, 4)}) ${cleanValue.slice(4, 7)}-${cleanValue.slice(7, 9)}`;
      return `8 (${cleanValue.slice(1, 4)}) ${cleanValue.slice(4, 7)}-${cleanValue.slice(7, 9)}-${cleanValue.slice(9, 11)}`;
    }
    
    // –î–ª—è –¥—Ä—É–≥–∏—Ö –Ω–æ–º–µ—Ä–æ–≤ (–Ω–∞—á–∏–Ω–∞—é—â–∏—Ö—Å—è —Å 9) –¥–æ–±–∞–≤–ª—è–µ–º +7
    if (cleanValue.length === 1) return `+7 (${cleanValue}`;
    if (cleanValue.length <= 4) return `+7 (${cleanValue.slice(0, 3)}`;
    if (cleanValue.length <= 7) return `+7 (${cleanValue.slice(0, 3)}) ${cleanValue.slice(3, 6)}`;
    if (cleanValue.length <= 9) return `+7 (${cleanValue.slice(0, 3)}) ${cleanValue.slice(3, 6)}-${cleanValue.slice(6, 8)}`;
    return `+7 (${cleanValue.slice(0, 3)}) ${cleanValue.slice(3, 6)}-${cleanValue.slice(6, 8)}-${cleanValue.slice(8, 10)}`;
  };

  // –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
  const validateForm = (): boolean => {
    const newErrors: FormErrors = {};

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
    if (!formData.name.trim()) {
      newErrors.name = "–ò–º—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } else if (formData.name.trim().length < 2) {
      newErrors.name = "–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞";
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    if (!formData.email.trim()) {
      newErrors.email = "Email –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } else if (!validateEmail(formData.email)) {
      newErrors.email = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å";
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if (formData.phone.trim()) {
      if (!validatePhone(formData.phone)) {
        newErrors.phone = "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX –∏–ª–∏ 9XXXXXXXXX)";
      }
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!formData.message.trim()) {
      newErrors.message = "–°–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è";
    } else if (formData.message.trim().length < 10) {
      newErrors.message = "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤";
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!validateForm()) {
      return;
    }

    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    console.log("Form submitted:", formData);
    setIsSubmitted(true);
    
    // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      setIsSubmitted(false);
      setFormData({
        name: "",
        email: "",
        phone: "",
        company: "",
        service: "",
        message: ""
      });
      setErrors({});
    }, 3000);
  };

  const handleChange = (field: string, value: string) => {
    let processedValue = value;
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if (field === "phone") {
      processedValue = formatPhone(value);
    }

    setFormData(prev => ({ ...prev, [field]: processedValue }));
    
    // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
    if (errors[field as keyof FormErrors]) {
      setErrors(prev => ({ ...prev, [field]: undefined }));
    }
  };

  const handleBlur = (field: string) => {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞
    if (field === "email" && formData.email) {
      if (!validateEmail(formData.email)) {
        setErrors(prev => ({ ...prev, email: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å" }));
      }
    }
    
    if (field === "phone" && formData.phone) {
      if (!validatePhone(formData.phone)) {
        setErrors(prev => ({ ...prev, phone: "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" }));
      }
    }
  };

  const contactInfo = [
    {
      icon: Phone,
      title: "–¢–µ–ª–µ—Ñ–æ–Ω",
      value: "+7 (495) 580-75-37",
      description: "–ü–Ω-–ü—Ç: 9:00 - 18:00"
    },
    {
      icon: Mail,
      title: "Email",
      value: "info@weshow.ru",
      description: "–û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤"
    },
    {
      icon: MapPin,
      title: "–ê–¥—Ä–µ—Å",
      value: "–ú–æ—Å–∫–≤–∞, —É–ª. –†–æ—á–¥–µ–ª—å—Å–∫–∞—è, 14–ê",
      description: "–û—Ñ–∏—Å –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞"
    },
    {
      icon: Clock,
      title: "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã",
      value: "9:00 - 18:00",
      description: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞"
    }
  ];

  if (isSubmitted) {
    return (
      <section className="py-24 bg-gradient-to-br from-green-50 to-emerald-50 relative overflow-hidden">
        <div className="container mx-auto px-6 lg:px-8 relative">
          <div className="text-center max-w-2xl mx-auto">
            <div className="w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-6">
              <CheckCircle className="h-10 w-10 text-white" />
            </div>
            <h2 className="text-3xl font-bold text-slate-900 mb-4">
              –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!
            </h2>
            <p className="text-lg text-slate-600 mb-6">
              –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.
            </p>
            <Button 
              onClick={() => setIsSubmitted(false)}
              className="px-8 py-3 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
            </Button>
          </div>
        </div>
      </section>
    );
  }

  return (
    <section className="py-24 bg-gradient-to-br from-slate-50 to-blue-50 relative overflow-hidden">
      {/* Background elements */}
      <div className="absolute top-0 left-0 w-96 h-96 bg-gradient-to-br from-blue-100 to-purple-100 rounded-full blur-3xl opacity-40"></div>
      <div className="absolute bottom-0 right-0 w-80 h-80 bg-gradient-to-br from-cyan-100 to-blue-100 rounded-full blur-3xl opacity-40"></div>
      
      <div className="container mx-auto px-6 lg:px-8 relative">
        <div className="text-center mb-16">
          <div className="inline-flex items-center px-4 py-2 rounded-full bg-blue-50 border border-blue-200 text-sm font-medium text-blue-700 mb-6">
            üìû –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏
          </div>
          <h2 className="text-4xl lg:text-5xl font-bold text-slate-900 leading-tight mb-6">
            –ì–æ—Ç–æ–≤—ã –æ–±—Å—É–¥–∏—Ç—å
            <span className="text-gradient bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent block">
              –≤–∞—à –ø—Ä–æ–µ–∫—Ç?
            </span>
          </h2>
          <p className="text-xl text-slate-600 max-w-3xl mx-auto leading-relaxed">
            –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏. 
            –ù–∞—à–∏ —ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ–º–æ–≥—É—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª—é–±—ã–µ –∏–¥–µ–∏!
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-16 items-start">
          
          {/* Contact Form */}
          <div className="bg-white rounded-2xl p-8 border border-slate-200/50 shadow-sm">
            <h3 className="text-2xl font-bold text-slate-900 mb-6">
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
            </h3>
            
            <form onSubmit={handleSubmit} className="space-y-6">
              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-slate-700 mb-2">
                    –ò–º—è *
                  </label>
                  <Input
                    type="text"
                    value={formData.name}
                    onChange={(e) => handleChange("name", e.target.value)}
                    onBlur={() => handleBlur("name")}
                    placeholder="–í–∞—à–µ –∏–º—è"
                    required
                    className={`w-full ${errors.name ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}`}
                  />
                  {errors.name && (
                    <div className="flex items-center mt-1 text-sm text-red-600">
                      <AlertCircle className="h-4 w-4 mr-1" />
                      {errors.name}
                    </div>
                  )}
                </div>
                <div>
                  <label className="block text-sm font-medium text-slate-700 mb-2">
                    Email *
                  </label>
                  <Input
                    type="email"
                    value={formData.email}
                    onChange={(e) => handleChange("email", e.target.value)}
                    onBlur={() => handleBlur("email")}
                    placeholder="your@email.com"
                    required
                    className={`w-full ${errors.email ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}`}
                  />
                  {errors.email && (
                    <div className="flex items-center mt-1 text-sm text-red-600">
                      <AlertCircle className="h-4 w-4 mr-1" />
                      {errors.email}
                    </div>
                  )}
                </div>
              </div>

              <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-slate-700 mb-2">
                    –¢–µ–ª–µ—Ñ–æ–Ω
                  </label>
                  <Input
                    type="tel"
                    value={formData.phone}
                    onChange={(e) => handleChange("phone", e.target.value)}
                    onBlur={() => handleBlur("phone")}
                    placeholder="+7 (___) ___-__-__"
                    className={`w-full ${errors.phone ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}`}
                  />
                  {errors.phone && (
                    <div className="flex items-center mt-1 text-sm text-red-600">
                      <AlertCircle className="h-4 w-4 mr-1" />
                      {errors.phone}
                    </div>
                  )}
                  <p className="text-xs text-slate-500 mt-1">
                    –§–æ—Ä–º–∞—Ç: +7 (XXX) XXX-XX-XX –∏–ª–∏ 8 (XXX) XXX-XX-XX
                  </p>
                </div>
                <div>
                  <label className="block text-sm font-medium text-slate-700 mb-2">
                    –ö–æ–º–ø–∞–Ω–∏—è
                  </label>
                  <Input
                    type="text"
                    value={formData.company}
                    onChange={(e) => handleChange("company", e.target.value)}
                    placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏"
                    className="w-full"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-slate-700 mb-2">
                  –£—Å–ª—É–≥–∞
                </label>
                <Select value={formData.service} onValueChange={(value) => handleChange("service", value)}>
                  <SelectTrigger>
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="multimedia">–ú—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è</SelectItem>
                    <SelectItem value="software">–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ü–û –∏ –∏–≥—Ä</SelectItem>
                    <SelectItem value="support">–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ</SelectItem>
                    <SelectItem value="integration">–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º—É–ª—å—Ç–∏–º–µ–¥–∏–∏</SelectItem>
                    <SelectItem value="branding">–ë—Ä–µ–Ω–¥–∏–Ω–≥ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π</SelectItem>
                    <SelectItem value="equipment">–ê—Ä–µ–Ω–¥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</SelectItem>
                    <SelectItem value="other">–î—Ä—É–≥–æ–µ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div>
                <label className="block text-sm font-medium text-slate-700 mb-2">
                  –°–æ–æ–±—â–µ–Ω–∏–µ *
                </label>
                <Textarea
                  value={formData.message}
                  onChange={(e) => handleChange("message", e.target.value)}
                  placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å..."
                  required
                  rows={4}
                  className={`w-full ${errors.message ? 'border-red-500 focus:border-red-500 focus:ring-red-500' : ''}`}
                />
                {errors.message && (
                  <div className="flex items-center mt-1 text-sm text-red-600">
                    <AlertCircle className="h-4 w-4 mr-1" />
                    {errors.message}
                  </div>
                )}
                <p className="text-xs text-slate-500 mt-1">
                  –ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤
                </p>
              </div>

              <Button 
                type="submit" 
                size="lg" 
                className="w-full px-8 py-4 text-lg font-semibold bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700"
              >
                <Send className="mr-2 h-5 w-5" />
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </Button>
            </form>
          </div>

          {/* Contact Information */}
          <div className="space-y-8">
            <div>
              <h3 className="text-2xl font-bold text-slate-900 mb-6">
                –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
              </h3>
              <p className="text-slate-600 leading-relaxed mb-8">
                –ú—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏ –∏ –≥–æ—Ç–æ–≤—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã. 
                –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ª—é–±—ã–º —É–¥–æ–±–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º.
              </p>
            </div>

            <div className="space-y-6">
              {contactInfo.map((info, index) => (
                <div key={index} className="flex items-start space-x-4">
                  <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl flex items-center justify-center flex-shrink-0">
                    <info.icon className="h-6 w-6 text-white" />
                  </div>
                  <div>
                    <h4 className="font-semibold text-slate-900 mb-1">
                      {info.title}
                    </h4>
                    <p className="text-slate-900 font-medium mb-1">
                      {info.value}
                    </p>
                    <p className="text-slate-600 text-sm">
                      {info.description}
                    </p>
                  </div>
                </div>
              ))}
            </div>

            {/* Additional Info */}
            <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-6 border border-blue-200/50">
              <h4 className="font-semibold text-slate-900 mb-3">
                üéØ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
              </h4>
              <p className="text-slate-600 text-sm leading-relaxed">
                –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é 
                –æ—Ç –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤!
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default ContactFormSection;
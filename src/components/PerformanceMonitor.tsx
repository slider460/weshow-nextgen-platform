import React, { useState, useEffect } from 'react';
import { usePreloadedData } from '../hooks/usePreloader';
import { useOptimizedCache } from '../hooks/useOptimizedCache';
import { usePerformanceMonitoring, performanceMonitor } from '../utils/performance-monitor';

interface PerformanceStats {
  loadTime: number;
  cacheHits: number;
  cacheMisses: number;
  dataSize: number;
  memoryUsage: number;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export const PerformanceMonitor: React.FC = () => {
  const [stats, setStats] = useState<PerformanceStats>({
    loadTime: 0,
    cacheHits: 0,
    cacheMisses: 0,
    dataSize: 0,
    memoryUsage: 0
  });
  
  const [isVisible, setIsVisible] = useState(false);
  const [webVitals, setWebVitals] = useState<any>({});
  const { equipment, categories, homepageEquipment } = usePreloadedData();
  const cache = useOptimizedCache();
  
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º –Ω–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  usePerformanceMonitoring(true);

  useEffect(() => {
    // –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö
    const dataSize = JSON.stringify({
      equipment,
      categories,
      homepageEquipment
    }).length;

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫—ç—à–∞
    const cacheStats = cache.getStats();

    setStats({
      loadTime: performance.now(),
      cacheHits: cacheStats.size,
      cacheMisses: 0, // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
      dataSize,
      memoryUsage: (performance as any).memory?.usedJSHeapSize || 0
    });
    
    // –ü–æ–ª—É—á–∞–µ–º Web Vitals –º–µ—Ç—Ä–∏–∫–∏
    const vitals = performanceMonitor.getStats();
    setWebVitals(vitals);
  }, [equipment.length, categories.length, homepageEquipment.length]);

  if (!isVisible) {
    return (
      <button
        onClick={() => setIsVisible(true)}
        className="fixed bottom-4 right-4 bg-blue-600 text-white p-2 rounded-full shadow-lg hover:bg-blue-700 transition-colors z-50"
        title="–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
      >
        üìä
      </button>
    );
  }

  return (
    <div className="fixed bottom-4 right-4 bg-white border border-gray-200 rounded-lg shadow-lg p-4 w-80 z-50">
      <div className="flex justify-between items-center mb-3">
        <h3 className="font-semibold text-gray-900">–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h3>
        <button
          onClick={() => setIsVisible(false)}
          className="text-gray-400 hover:text-gray-600"
        >
          ‚úï
        </button>
      </div>
      
      <div className="space-y-2 text-sm">
        <div className="flex justify-between">
          <span className="text-gray-600">–í—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏:</span>
          <span className="font-mono">{stats.loadTime.toFixed(0)}ms</span>
        </div>
        
        <div className="flex justify-between">
          <span className="text-gray-600">–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:</span>
          <span className="font-mono">{(stats.dataSize / 1024).toFixed(1)}KB</span>
        </div>
        
        <div className="flex justify-between">
          <span className="text-gray-600">–ó–∞–ø–∏—Å–µ–π –≤ –∫—ç—à–µ:</span>
          <span className="font-mono">{stats.cacheHits}</span>
        </div>
        
        <div className="flex justify-between">
          <span className="text-gray-600">–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ:</span>
          <span className="font-mono">{equipment.length}</span>
        </div>
        
        <div className="flex justify-between">
          <span className="text-gray-600">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:</span>
          <span className="font-mono">{categories.length}</span>
        </div>
        
        <div className="flex justify-between">
          <span className="text-gray-600">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞:</span>
          <span className="font-mono">{homepageEquipment.length}</span>
        </div>
      </div>
      
      {/* –ù–æ–≤—ã–π —Ä–∞–∑–¥–µ–ª: Core Web Vitals */}
      {Object.keys(webVitals).length > 0 && (
        <div className="mt-3 pt-3 border-t border-gray-200">
          <h4 className="font-semibold text-gray-900 mb-2 text-sm">Core Web Vitals</h4>
          <div className="space-y-1.5 text-xs">
            {Object.entries(webVitals).map(([name, data]: [string, any]) => (
              <div key={name} className="flex justify-between items-center">
                <span className="text-gray-600">{name}:</span>
                <div className="flex items-center gap-1">
                  <span className="font-mono">{data.avg.toFixed(0)}ms</span>
                  <span className={`w-2 h-2 rounded-full ${
                    data.avg <= (name === 'CLS' ? 0.1 : name === 'LCP' ? 2500 : name === 'INP' ? 200 : 800) 
                      ? 'bg-green-500' 
                      : 'bg-yellow-500'
                  }`} />
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
      
      <div className="mt-3 pt-3 border-t border-gray-200">
        <div className="text-xs text-gray-500">
          üí° –î–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã
        </div>
        <div className="text-xs text-gray-500 mt-1">
          üöÄ Real-time performance monitoring
        </div>
      </div>
    </div>
  );
};

export default PerformanceMonitor;
import React, { useState } from 'react'
import { supabase } from '../config/supabase'

const CreateAdminUser: React.FC = () => {
  const [email, setEmail] = useState('admin@weshow.ru')
  const [password, setPassword] = useState('password')
  const [loading, setLoading] = useState(false)
  const [message, setMessage] = useState('')
  const [error, setError] = useState('')

  const createAdminUser = async () => {
    setLoading(true)
    setError('')
    setMessage('')

    try {
      // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase Auth
      const { data: authData, error: authError } = await supabase.auth.signUp({
        email,
        password,
        options: {
          data: {
            full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            company_name: 'WeShow',
            phone: '+7 (495) 580-75-37',
            role: 'admin'
          }
        }
      })

      if (authError) {
        throw authError
      }

      if (!authData.user) {
        throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω')
      }

      // 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ user_profiles
      const { error: profileError } = await supabase
        .from('user_profiles')
        .insert({
          id: authData.user.id,
          full_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
          company_name: 'WeShow',
          phone: '+7 (495) 580-75-37',
          role: 'admin'
        })

      if (profileError) {
        console.error('Profile creation error:', profileError)
        // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–æ–∑–¥–∞–Ω
      }

      setMessage(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`)
      console.log('Admin user created:', authData.user)

    } catch (error: any) {
      console.error('Error creating admin user:', error)
      setError(`–û—à–∏–±–∫–∞: ${error.message}`)
    } finally {
      setLoading(false)
    }
  }

  const createManagerUser = async () => {
    setLoading(true)
    setError('')
    setMessage('')

    try {
      // 1. –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ Supabase Auth
      const { data: authData, error: authError } = await supabase.auth.signUp({
        email: 'manager@weshow.ru',
        password: 'password',
        options: {
          data: {
            full_name: '–ú–µ–Ω–µ–¥–∂–µ—Ä',
            company_name: 'WeShow',
            phone: '+7 (495) 580-75-37',
            role: 'manager'
          }
        }
      })

      if (authError) {
        throw authError
      }

      if (!authData.user) {
        throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω')
      }

      // 2. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ user_profiles
      const { error: profileError } = await supabase
        .from('user_profiles')
        .insert({
          id: authData.user.id,
          full_name: '–ú–µ–Ω–µ–¥–∂–µ—Ä',
          company_name: 'WeShow',
          phone: '+7 (495) 580-75-37',
          role: 'manager'
        })

      if (profileError) {
        console.error('Profile creation error:', profileError)
      }

      setMessage(`‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä manager@weshow.ru —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!`)
      console.log('Manager user created:', authData.user)

    } catch (error: any) {
      console.error('Error creating manager user:', error)
      setError(`–û—à–∏–±–∫–∞: ${error.message}`)
    } finally {
      setLoading(false)
    }
  }

  const testConnection = async () => {
    setLoading(true)
    setError('')
    setMessage('')

    try {
      const { data, error } = await supabase
        .from('user_profiles')
        .select('count')
        .limit(1)

      if (error) {
        throw error
      }

      setMessage('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —Ä–∞–±–æ—Ç–∞–µ—Ç!')
    } catch (error: any) {
      console.error('Connection test error:', error)
      setError(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error.message}`)
    } finally {
      setLoading(false)
    }
  }

  return (
    <div style={{
      minHeight: '100vh',
      background: 'linear-gradient(135deg, #1e293b 0%, #334155 100%)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      padding: '2rem'
    }}>
      <div style={{
        background: 'rgba(255,255,255,0.95)',
        backdropFilter: 'blur(10px)',
        borderRadius: '1rem',
        padding: '3rem',
        boxShadow: '0 25px 50px rgba(0,0,0,0.25)',
        width: '100%',
        maxWidth: '600px'
      }}>
        <h1 style={{
          fontSize: '2rem',
          fontWeight: 'bold',
          color: '#1e293b',
          marginBottom: '2rem',
          textAlign: 'center'
        }}>
          üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        </h1>

        <div style={{ marginBottom: '2rem' }}>
          <button
            onClick={testConnection}
            disabled={loading}
            style={{
              width: '100%',
              background: '#10b981',
              color: 'white',
              border: 'none',
              padding: '0.75rem',
              borderRadius: '0.5rem',
              fontSize: '1rem',
              fontWeight: '600',
              cursor: loading ? 'not-allowed' : 'pointer',
              marginBottom: '1rem'
            }}
          >
            {loading ? '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...' : 'üß™ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase'}
          </button>
        </div>

        <div style={{ marginBottom: '2rem' }}>
          <label style={{
            display: 'block',
            fontSize: '0.9rem',
            fontWeight: '600',
            color: '#374151',
            marginBottom: '0.5rem'
          }}>
            Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
          </label>
          <input
            type="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            style={{
              width: '100%',
              padding: '0.75rem',
              border: '2px solid #e5e7eb',
              borderRadius: '0.5rem',
              fontSize: '1rem',
              outline: 'none'
            }}
          />
        </div>

        <div style={{ marginBottom: '2rem' }}>
          <label style={{
            display: 'block',
            fontSize: '0.9rem',
            fontWeight: '600',
            color: '#374151',
            marginBottom: '0.5rem'
          }}>
            –ü–∞—Ä–æ–ª—å
          </label>
          <input
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
            style={{
              width: '100%',
              padding: '0.75rem',
              border: '2px solid #e5e7eb',
              borderRadius: '0.5rem',
              fontSize: '1rem',
              outline: 'none'
            }}
          />
        </div>

        <div style={{ display: 'flex', gap: '1rem', marginBottom: '2rem' }}>
          <button
            onClick={createAdminUser}
            disabled={loading}
            style={{
              flex: 1,
              background: loading ? '#9ca3af' : '#3b82f6',
              color: 'white',
              border: 'none',
              padding: '0.75rem',
              borderRadius: '0.5rem',
              fontSize: '1rem',
              fontWeight: '600',
              cursor: loading ? 'not-allowed' : 'pointer'
            }}
          >
            {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : 'üë§ –°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∞'}
          </button>

          <button
            onClick={createManagerUser}
            disabled={loading}
            style={{
              flex: 1,
              background: loading ? '#9ca3af' : '#8b5cf6',
              color: 'white',
              border: 'none',
              padding: '0.75rem',
              borderRadius: '0.5rem',
              fontSize: '1rem',
              fontWeight: '600',
              cursor: loading ? 'not-allowed' : 'pointer'
            }}
          >
            {loading ? '–°–æ–∑–¥–∞–Ω–∏–µ...' : 'üë§ –°–æ–∑–¥–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞'}
          </button>
        </div>

        {error && (
          <div style={{
            background: '#fef2f2',
            border: '1px solid #fecaca',
            color: '#dc2626',
            padding: '0.75rem',
            borderRadius: '0.5rem',
            fontSize: '0.9rem',
            marginBottom: '1rem'
          }}>
            ‚ùå {error}
          </div>
        )}

        {message && (
          <div style={{
            background: '#f0fdf4',
            border: '1px solid #bbf7d0',
            color: '#166534',
            padding: '0.75rem',
            borderRadius: '0.5rem',
            fontSize: '0.9rem',
            marginBottom: '1rem'
          }}>
            {message}
          </div>
        )}

        <div style={{
          background: '#f8fafc',
          padding: '1rem',
          borderRadius: '0.5rem',
          border: '1px solid #e2e8f0',
          marginBottom: '2rem'
        }}>
          <h3 style={{
            fontSize: '1rem',
            fontWeight: '600',
            color: '#374151',
            marginBottom: '0.5rem'
          }}>
            üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:
          </h3>
          <ol style={{ fontSize: '0.9rem', color: '#6b7280', paddingLeft: '1.5rem' }}>
            <li>–°–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"</li>
            <li>–ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–π—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</li>
            <li>–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–π—Ç–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞</li>
            <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É</li>
          </ol>
        </div>

        <div style={{ textAlign: 'center' }}>
          <a
            href="/admin/login"
            style={{
              color: '#3b82f6',
              textDecoration: 'none',
              fontSize: '1rem',
              fontWeight: '500'
            }}
          >
            ‚Üí –ü–µ—Ä–µ–π—Ç–∏ –∫ –≤—Ö–æ–¥—É –≤ –∞–¥–º–∏–Ω–∫—É
          </a>
        </div>
      </div>
    </div>
  )
}

export default CreateAdminUser

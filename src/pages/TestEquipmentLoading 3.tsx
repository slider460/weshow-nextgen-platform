import React, { useState } from 'react';

export const TestEquipmentLoading: React.FC = () => {
  const [results, setResults] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(false);

  const addResult = (message: string) => {
    setResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);
  };

  const testEquipmentLoading = async () => {
    setIsLoading(true);
    setResults([]);

    const SUPABASE_URL = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
    const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE';

    try {
      addResult('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏–∑ –ë–î...');
      
      // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –∫ homepage_equipment
      addResult('üì° –ó–∞–ø—Ä–æ—Å: GET /rest/v1/homepage_equipment');
      
      const response = await fetch(`${SUPABASE_URL}/rest/v1/homepage_equipment?select=*&order=sort_order.asc`, {
        method: 'GET',
        headers: {
          'apikey': SUPABASE_KEY,
          'Authorization': `Bearer ${SUPABASE_KEY}`,
          'Content-Type': 'application/json',
        },
      });

      addResult(`üìä –û—Ç–≤–µ—Ç: ${response.status} ${response.statusText}`);
      
      if (response.ok) {
        const data = await response.json();
        addResult(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${data.length}`);
        
        if (data.length > 0) {
          addResult(`üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–π –∑–∞–ø–∏—Å–∏:`);
          addResult(`   - id: ${data[0].id}`);
          addResult(`   - title: ${data[0].title}`);
          addResult(`   - description: ${data[0].description}`);
          addResult(`   - image_url: ${data[0].image_url || '–ù–ï–¢ –ü–û–õ–Ø'}`);
          addResult(`   - is_active: ${data[0].is_active}`);
          addResult(`   - sort_order: ${data[0].sort_order}`);
          
          addResult(`üìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:`);
          addResult(JSON.stringify(data[0], null, 2));
        } else {
          addResult('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞—è - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
        }

        // –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π
        addResult('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π...');
        
        const activeResponse = await fetch(`${SUPABASE_URL}/rest/v1/homepage_equipment?select=*&is_active=eq.true&order=sort_order.asc`, {
          method: 'GET',
          headers: {
            'apikey': SUPABASE_KEY,
            'Authorization': `Bearer ${SUPABASE_KEY}`,
            'Content-Type': 'application/json',
          },
        });

        addResult(`üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø–∏—Å–∏: ${activeResponse.status} ${activeResponse.statusText}`);
        
        if (activeResponse.ok) {
          const activeData = await activeResponse.json();
          addResult(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${activeData.length}`);
        }

        // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –∏—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        addResult('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–∏—Å–∏...');
        
        if (data.length > 0) {
          const record = data[0];
          const fields = Object.keys(record);
          addResult(`üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è: ${fields.join(', ')}`);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ image_url
          if ('image_url' in record) {
            addResult(`‚úÖ –ü–æ–ª–µ image_url –Ω–∞–π–¥–µ–Ω–æ: ${record.image_url}`);
          } else {
            addResult(`‚ùå –ü–æ–ª–µ image_url –ù–ï –Ω–∞–π–¥–µ–Ω–æ!`);
          }
        }

      } else {
        const errorText = await response.text();
        addResult(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status} - ${errorText}`);
      }

    } catch (error) {
      addResult(`‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: ${error}`);
    }

    setIsLoading(false);
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-6xl mx-auto px-4">
        <div className="bg-white rounded-lg shadow-lg p-6">
          <h1 className="text-3xl font-bold text-gray-900 mb-6">
            üîç –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏–∑ –ë–î
          </h1>
          
          <div className="mb-6">
            <button
              onClick={testEquipmentLoading}
              disabled={isLoading}
              className="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {isLoading ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è'}
            </button>
          </div>

          <div className="bg-gray-100 p-4 rounded-lg">
            <h3 className="font-semibold mb-2">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
            <div className="space-y-1 max-h-96 overflow-y-auto">
              {results.length === 0 ? (
                <p className="text-gray-500">–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞</p>
              ) : (
                results.map((result, index) => (
                  <div key={index} className="text-sm font-mono bg-white p-2 rounded border">
                    {result}
                  </div>
                ))
              )}
            </div>
          </div>

          <div className="mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <h3 className="font-semibold text-blue-900 mb-2">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h3>
            <ul className="text-sm text-blue-800 space-y-1">
              <li>‚Ä¢ –≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã homepage_equipment</li>
              <li>‚Ä¢ –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ - –ø—Ä–æ–±–ª–µ–º–∞ –≤ RLS –ø–æ–ª–∏—Ç–∏–∫–∞—Ö</li>
              <li>‚Ä¢ –ï—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—è image_url - –ø—Ä–æ–±–ª–µ–º–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ë–î</li>
              <li>‚Ä¢ –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å, –Ω–æ –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  );
};

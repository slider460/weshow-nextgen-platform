import React, { useState } from 'react';
import { Button } from '../components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card';
import { Trash2, RefreshCw, Database, CheckCircle } from 'lucide-react';

const ClearLogosData = () => {
  const [isClearing, setIsClearing] = useState(false);
  const [isRefreshing, setIsRefreshing] = useState(false);
  const [results, setResults] = useState<string[]>([]);

  const addResult = (message: string) => {
    setResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);
  };

  const clearLocalStorage = () => {
    try {
      // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –∏–∑ localStorage
      localStorage.removeItem('logos');
      localStorage.removeItem('logos_data');
      localStorage.removeItem('logos_state');
      
      // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–æ—Ç–∏–ø–æ–≤
      const keys = Object.keys(localStorage);
      keys.forEach(key => {
        if (key.includes('logo') || key.includes('Logos')) {
          localStorage.removeItem(key);
        }
      });
      
      addResult('‚úÖ localStorage –æ—á–∏—â–µ–Ω –æ—Ç —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤');
    } catch (error) {
      addResult(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ localStorage: ${error}`);
    }
  };

  const clearSessionStorage = () => {
    try {
      sessionStorage.clear();
      addResult('‚úÖ sessionStorage –æ—á–∏—â–µ–Ω');
    } catch (error) {
      addResult(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ sessionStorage: ${error}`);
    }
  };

  const forceRefresh = () => {
    try {
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
      window.location.reload();
      addResult('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
    } catch (error) {
      addResult(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${error}`);
    }
  };

  const handleClearAll = async () => {
    setIsClearing(true);
    setResults([]);
    
    addResult('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö...');
    
    // –û—á–∏—â–∞–µ–º localStorage
    clearLocalStorage();
    
    // –û—á–∏—â–∞–µ–º sessionStorage
    clearSessionStorage();
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    addResult('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    setIsClearing(false);
  };

  const handleRefresh = async () => {
    setIsRefreshing(true);
    setResults([]);
    
    addResult('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...');
    
    // –û—á–∏—â–∞–µ–º –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞
    if ('caches' in window) {
      const cacheNames = await caches.keys();
      await Promise.all(
        cacheNames.map(cacheName => caches.delete(cacheName))
      );
      addResult('‚úÖ –ö—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –æ—á–∏—â–µ–Ω');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await new Promise(resolve => setTimeout(resolve, 1000));
    forceRefresh();
  };

  return (
    <div className="min-h-screen bg-slate-50 p-8">
      <div className="max-w-4xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-slate-900 mb-4">
            –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤
          </h1>
          <p className="text-slate-600">
            –≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–º–æ–∂–µ—Ç –æ—á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã.
          </p>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <Trash2 className="w-5 h-5 mr-2 text-red-500" />
                –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-slate-600 mb-4">
                –û—á–∏—â–∞–µ—Ç localStorage –∏ sessionStorage –æ—Ç —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ª–æ–≥–æ—Ç–∏–ø–æ–≤
              </p>
              <Button 
                onClick={handleClearAll}
                disabled={isClearing}
                className="w-full bg-red-600 hover:bg-red-700"
              >
                {isClearing ? '–û—á–∏—Å—Ç–∫–∞...' : '–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ'}
              </Button>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle className="flex items-center">
                <RefreshCw className="w-5 h-5 mr-2 text-blue-500" />
                –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-sm text-slate-600 mb-4">
                –û—á–∏—â–∞–µ—Ç –∫—ç—à –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É
              </p>
              <Button 
                onClick={handleRefresh}
                disabled={isRefreshing}
                className="w-full bg-blue-600 hover:bg-blue-700"
              >
                {isRefreshing ? '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...' : '–û–±–Ω–æ–≤–∏—Ç—å –∏ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à'}
              </Button>
            </CardContent>
          </Card>
        </div>

        <Card className="mb-6">
          <CardHeader>
            <CardTitle className="flex items-center">
              <Database className="w-5 h-5 mr-2" />
              –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø–µ—Ä–∞—Ü–∏–π
            </CardTitle>
          </CardHeader>
          <CardContent>
            {results.length > 0 ? (
              <div className="space-y-2 max-h-64 overflow-y-auto">
                {results.map((result, index) => (
                  <div key={index} className="text-sm font-mono bg-slate-100 p-2 rounded">
                    {result}
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-slate-500 text-center py-8">
                –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—á–∏—Å—Ç–∫—É
              </div>
            )}
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle>–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <div className="flex items-start">
                <div className="w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-semibold mr-3 mt-1">
                  1
                </div>
                <div>
                  <h4 className="font-semibold text-slate-900 mb-1">–û—á–∏—Å—Ç–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ</h4>
                  <p className="text-sm text-slate-600">
                    –ù–∞–∂–º–∏—Ç–µ "–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ" –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞
                  </p>
                </div>
              </div>
              
              <div className="flex items-start">
                <div className="w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-semibold mr-3 mt-1">
                  2
                </div>
                <div>
                  <h4 className="font-semibold text-slate-900 mb-1">–°–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –≤ Supabase</h4>
                  <p className="text-sm text-slate-600">
                    –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –∏–∑ <a href="/create-logos-table-sql" className="text-blue-600 hover:underline">—ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã</a>
                  </p>
                </div>
              </div>
              
              <div className="flex items-start">
                <div className="w-6 h-6 bg-blue-100 text-blue-600 rounded-full flex items-center justify-center text-sm font-semibold mr-3 mt-1">
                  3
                </div>
                <div>
                  <h4 className="font-semibold text-slate-900 mb-1">–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é</h4>
                  <p className="text-sm text-slate-600">
                    –û—Ç–∫—Ä–æ–π—Ç–µ <a href="/admin/logos" className="text-blue-600 hover:underline">–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</a> –∏ <a href="/" className="text-blue-600 hover:underline">–≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É</a>
                  </p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        <div className="mt-8 flex gap-4">
          <Button asChild className="bg-green-600 hover:bg-green-700">
            <a href="/admin/logos">
              <CheckCircle className="w-4 h-4 mr-2" />
              –ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
            </a>
          </Button>
          
          <Button variant="outline" asChild>
            <a href="/">
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            </a>
          </Button>
        </div>
      </div>
    </div>
  );
};

export default ClearLogosData;

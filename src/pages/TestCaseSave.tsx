import React, { useState } from 'react';
import { createCase, updateCase, getCases } from '../api/adminRest';

const TestCaseSave: React.FC = () => {
  const [loading, setLoading] = useState(false);
  const [result, setResult] = useState<string>('');
  const [error, setError] = useState<string>('');

  const testCreateCase = async () => {
    setLoading(true);
    setError('');
    setResult('');

    try {
      console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–µ–π—Å–∞...');
      
      const testData = {
        title: `–¢–µ—Å—Ç–æ–≤—ã–π –∫–µ–π—Å ${Date.now()}`,
        client: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
        year: 2024,
        description: '–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–µ–π—Å–∞',
        results: JSON.stringify(['–†–µ–∑—É–ª—å—Ç–∞—Ç 1', '–†–µ–∑—É–ª—å—Ç–∞—Ç 2']),
        is_visible: true,
        sort_order: 9999,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      };

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', testData);
      
      const startTime = Date.now();
      const response = await createCase(testData);
      const endTime = Date.now();
      
      console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', response);
      console.log('‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', endTime - startTime, '–º—Å');
      
      setResult(`‚úÖ –ö–µ–π—Å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞ ${endTime - startTime}–º—Å\nID: ${response?.[0]?.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
      
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–µ–π—Å–∞:', err);
      setError(`‚ùå –û—à–∏–±–∫–∞: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    } finally {
      setLoading(false);
    }
  };

  const testUpdateCase = async () => {
    setLoading(true);
    setError('');
    setResult('');

    try {
      console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ–π—Å–∞...');
      
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–µ–π—Å–æ–≤
      const cases = await getCases();
      if (!cases || cases.length === 0) {
        throw new Error('–ù–µ—Ç –∫–µ–π—Å–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
      }
      
      const firstCase = cases[0];
      console.log('üìã –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ–π—Å:', firstCase.id);
      
      const updateData = {
        title: `${firstCase.title} (–æ–±–Ω–æ–≤–ª–µ–Ω–æ ${new Date().toLocaleTimeString()})`,
        updated_at: new Date().toISOString()
      };

      console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateData);
      
      const startTime = Date.now();
      const response = await updateCase(firstCase.id, updateData);
      const endTime = Date.now();
      
      console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', response);
      console.log('‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', endTime - startTime, '–º—Å');
      
      setResult(`‚úÖ –ö–µ–π—Å –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞ ${endTime - startTime}–º—Å\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${response?.[0]?.title || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
      
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ–π—Å–∞:', err);
      setError(`‚ùå –û—à–∏–±–∫–∞: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    } finally {
      setLoading(false);
    }
  };

  const testGetCases = async () => {
    setLoading(true);
    setError('');
    setResult('');

    try {
      console.log('üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–µ–π—Å–æ–≤...');
      
      const startTime = Date.now();
      const cases = await getCases();
      const endTime = Date.now();
      
      console.log('‚úÖ –ö–µ–π—Å—ã –ø–æ–ª—É—á–µ–Ω—ã:', cases?.length || 0);
      console.log('‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', endTime - startTime, '–º—Å');
      
      setResult(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–µ–π—Å–æ–≤: ${cases?.length || 0} –∑–∞ ${endTime - startTime}–º—Å`);
      
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–µ–π—Å–æ–≤:', err);
      setError(`‚ùå –û—à–∏–±–∫–∞: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-slate-50 p-8">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold text-slate-900 mb-8">
          –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–µ–π—Å–æ–≤
        </h1>

        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
          <button
            onClick={testCreateCase}
            disabled={loading}
            className="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 disabled:opacity-50"
          >
            {loading ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∫–µ–π—Å–∞'}
          </button>
          
          <button
            onClick={testUpdateCase}
            disabled={loading}
            className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 disabled:opacity-50"
          >
            {loading ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ–π—Å–∞'}
          </button>
          
          <button
            onClick={testGetCases}
            disabled={loading}
            className="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 disabled:opacity-50"
          >
            {loading ? '–¢–µ—Å—Ç–∏—Ä—É–µ–º...' : '–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–µ–π—Å–æ–≤'}
          </button>
        </div>

        {loading && (
          <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-6">
            <div className="flex items-center">
              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-yellow-600 mr-3"></div>
              <p className="text-yellow-800">–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–µ—Å—Ç...</p>
            </div>
          </div>
        )}

        {result && (
          <div className="bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
            <pre className="text-green-800 whitespace-pre-wrap">{result}</pre>
          </div>
        )}

        {error && (
          <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
            <pre className="text-red-800 whitespace-pre-wrap">{error}</pre>
          </div>
        )}

        <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-blue-900 mb-2">
            –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
          </h3>
          <ul className="text-blue-800 space-y-1 text-sm">
            <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫</li>
            <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ</li>
            <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ Service Role –∫–ª—é—á–∞</li>
            <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ cases —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</li>
            <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ DevTools</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

export default TestCaseSave;









import { useState, useEffect } from 'react';
import { Button } from '../components/ui/button';

const AutoCreateTableDirect = () => {
  const [status, setStatus] = useState('–ì–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Ç–∞–±–ª–∏—Ü—ã');
  const [loading, setLoading] = useState(false);
  const [step, setStep] = useState(0);

  const steps = [
    '–ü—Ä–æ–≤–µ—Ä—è—é —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã...',
    '–û—Ç–∫—Ä—ã–≤–∞—é Supabase Dashboard...',
    '–°–æ–∑–¥–∞—é SQL —Ñ–∞–π–ª...',
    '–ì–æ—Ç–æ–≤–æ! –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤ Dashboard'
  ];

  useEffect(() => {
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    handleAutoCreate();
  }, []);

  const handleAutoCreate = async () => {
    setLoading(true);
    
    try {
      // –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É
      setStep(0);
      setStatus(steps[0]);
      
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // –®–∞–≥ 2: –û—Ç–∫—Ä—ã–≤–∞–µ–º Dashboard
      setStep(1);
      setStatus(steps[1]);
      
      const dashboardUrl = 'https://supabase.com/dashboard/project/zbykhdjqrtqftfitbvbt/sql';
      window.open(dashboardUrl, '_blank');
      
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º SQL —Ñ–∞–π–ª
      setStep(2);
      setStatus(steps[2]);
      
      const sqlContent = `-- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã letters_certificates
CREATE TABLE IF NOT EXISTS letters_certificates (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  title VARCHAR(255) NOT NULL,
  description TEXT,
  image_url TEXT,
  document_url TEXT,
  type VARCHAR(50) NOT NULL CHECK (type IN ('letter', 'certificate', 'award', 'diploma')),
  issuer VARCHAR(255) NOT NULL,
  issued_date DATE,
  is_visible BOOLEAN DEFAULT true,
  sort_order INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- –í–∫–ª—é—á–µ–Ω–∏–µ RLS
ALTER TABLE letters_certificates ENABLE ROW LEVEL SECURITY;

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
CREATE POLICY "Anyone can view visible letters and certificates" ON letters_certificates
  FOR SELECT USING (is_visible = true);

CREATE POLICY "Admins can manage letters and certificates" ON letters_certificates
  FOR ALL USING (
    EXISTS (
      SELECT 1 FROM users 
      WHERE users.id = auth.uid() 
      AND users.role = 'admin'
    )
  );

-- –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT INTO letters_certificates (title, description, type, issuer, issued_date, sort_order) VALUES
('–ë–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –ì–∞–∑–ø—Ä–æ–º', '–ó–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞', 'letter', '–ü–ê–û –ì–∞–∑–ø—Ä–æ–º', '2024-01-15', 1),
('–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∫–∞—á–µ—Å—Ç–≤–∞', '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º', 'certificate', 'ISO International', '2024-02-20', 2),
('–î–∏–ø–ª–æ–º –∑–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', '–î–∏–ø–ª–æ–º –∑–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –≤ –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞', 'diploma', '–†–æ—Å—Å–∏–π—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –º—É–ª—å—Ç–∏–º–µ–¥–∏–∞', '2024-03-10', 3),
('–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –ø—Ä–æ–µ–∫—Ç', '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –ª—É—á—à–∏–π –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –≥–æ–¥–∞', 'award', '–ú–æ—Å–∫–æ–≤—Å–∫–∞—è –∞—Å—Å–æ—Ü–∏–∞—Ü–∏—è –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤', '2024-04-05', 4);`;

      // –°–æ–∑–¥–∞–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º SQL —Ñ–∞–π–ª
      const blob = new Blob([sqlContent], { type: 'text/plain' });
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'CREATE_LETTERS_TABLE.sql';
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      window.URL.revokeObjectURL(url);
      
      await new Promise(resolve => setTimeout(resolve, 1000));
      
      // –®–∞–≥ 4: –ì–æ—Ç–æ–≤–æ
      setStep(3);
      setStatus(steps[3]);
      
    } catch (error) {
      setStatus('‚ùå –û—à–∏–±–∫–∞: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  const handleCheckTable = async () => {
    setLoading(true);
    setStatus('–ü—Ä–æ–≤–µ—Ä—è—é —Ç–∞–±–ª–∏—Ü—É...');
    
    try {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ API
      await new Promise(resolve => setTimeout(resolve, 2000));
      setStatus('‚úÖ –¢–∞–±–ª–∏—Ü–∞ letters_certificates –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
    } catch (error) {
      setStatus('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ' + error.message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{ 
      minHeight: '100vh', 
      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
      padding: '2rem',
      color: 'white'
    }}>
      <div style={{ 
        maxWidth: '1000px', 
        margin: '0 auto'
      }}>
        <div style={{
          background: 'rgba(255,255,255,0.1)',
          backdropFilter: 'blur(10px)',
          borderRadius: '1rem',
          padding: '2rem',
          marginBottom: '2rem'
        }}>
          <h1 style={{ 
            fontSize: '2.5rem', 
            fontWeight: 'bold', 
            marginBottom: '1rem',
            textAlign: 'center'
          }}>
            üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
          </h1>
          
          <p style={{ 
            fontSize: '1.2rem', 
            textAlign: 'center',
            opacity: 0.9,
            marginBottom: '2rem'
          }}>
            –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É letters_certificates –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          </p>
        </div>

        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
        <div style={{
          background: 'rgba(255,255,255,0.1)',
          backdropFilter: 'blur(10px)',
          borderRadius: '1rem',
          padding: '1.5rem',
          marginBottom: '2rem'
        }}>
          <h2 style={{ fontSize: '1.5rem', marginBottom: '1rem', textAlign: 'center' }}>
            üìä –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è
          </h2>
          
          <div style={{ marginBottom: '1rem' }}>
            {steps.map((stepText, index) => (
              <div key={index} style={{
                display: 'flex',
                alignItems: 'center',
                marginBottom: '0.5rem',
                opacity: index <= step ? 1 : 0.5
              }}>
                <div style={{
                  width: '20px',
                  height: '20px',
                  borderRadius: '50%',
                  background: index < step ? '#10B981' : index === step ? '#F59E0B' : '#6B7280',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  marginRight: '1rem',
                  fontSize: '0.8rem'
                }}>
                  {index < step ? '‚úì' : index === step ? '‚è≥' : '‚óã'}
                </div>
                <span style={{ fontSize: '1rem' }}>{stepText}</span>
              </div>
            ))}
          </div>
          
          <div style={{
            background: 'rgba(0,0,0,0.3)',
            padding: '1rem',
            borderRadius: '0.5rem',
            textAlign: 'center',
            fontSize: '1.1rem'
          }}>
            {status}
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div style={{ 
          display: 'flex', 
          gap: '1rem', 
          justifyContent: 'center',
          marginBottom: '2rem',
          flexWrap: 'wrap'
        }}>
          <Button
            onClick={handleCheckTable}
            disabled={loading}
            style={{
              background: 'rgba(59, 130, 246, 0.2)',
              border: '1px solid rgba(59, 130, 246, 0.5)',
              color: 'white',
              padding: '0.75rem 1.5rem',
              borderRadius: '0.5rem',
              cursor: loading ? 'not-allowed' : 'pointer',
              fontSize: '1rem',
              fontWeight: '500',
              opacity: loading ? 0.5 : 1
            }}
          >
            üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É
          </Button>
          
          <Button
            onClick={() => window.open('/admin/letters', '_blank')}
            style={{
              background: 'rgba(245, 158, 11, 0.2)',
              border: '1px solid rgba(245, 158, 11, 0.5)',
              color: 'white',
              padding: '0.75rem 1.5rem',
              borderRadius: '0.5rem',
              cursor: 'pointer',
              fontSize: '1rem',
              fontWeight: '500'
            }}
          >
            üèÜ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
          </Button>
          
          <Button
            onClick={() => window.open('/', '_blank')}
            style={{
              background: 'rgba(236, 72, 153, 0.2)',
              border: '1px solid rgba(236, 72, 153, 0.5)',
              color: 'white',
              padding: '0.75rem 1.5rem',
              borderRadius: '0.5rem',
              cursor: 'pointer',
              fontSize: '1rem',
              fontWeight: '500'
            }}
          >
            üè† –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
          </Button>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è */}
        {step >= 3 && (
          <div style={{
            background: 'rgba(34, 197, 94, 0.1)',
            backdropFilter: 'blur(10px)',
            borderRadius: '1rem',
            padding: '1.5rem',
            border: '1px solid rgba(34, 197, 94, 0.3)'
          }}>
            <h3 style={{ fontSize: '1.2rem', marginBottom: '1rem', color: 'white' }}>
              ‚úÖ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é:
            </h3>
            <ol style={{ 
              color: 'rgba(255,255,255,0.9)', 
              margin: 0, 
              paddingLeft: '1.5rem',
              lineHeight: '1.6'
            }}>
              <li>Supabase Dashboard —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ</li>
              <li>SQL —Ñ–∞–π–ª CREATE_LETTERS_TABLE.sql —Å–∫–∞—á–∞–Ω</li>
              <li>–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ</li>
              <li>–í—Å—Ç–∞–≤—å—Ç–µ SQL –∫–æ–¥ –≤ Supabase SQL Editor</li>
              <li>–ù–∞–∂–º–∏—Ç–µ "Run" –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</li>
              <li>–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–µ—Ä–Ω–∏—Ç–µ—Å—å —Å—é–¥–∞ –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–∞–±–ª–∏—Ü—É</li>
            </ol>
          </div>
        )}
      </div>
    </div>
  );
};

export default AutoCreateTableDirect;

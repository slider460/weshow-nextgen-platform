import React, { useState } from 'react'
import { supabase } from '../config/supabase'
import { Button } from '../components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card'
import { Alert, AlertDescription } from '../components/ui/alert'
import { CheckCircle, XCircle, AlertTriangle, Copy, ExternalLink } from 'lucide-react'

export default function FixHomepageEquipmentRLS() {
  const [step, setStep] = useState<'ready' | 'testing' | 'fixing' | 'complete' | 'error'>('ready')
  const [error, setError] = useState<string | null>(null)
  const [testResult, setTestResult] = useState<any>(null)

  const testRLS = async () => {
    setStep('testing')
    setError(null)
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –º—ã —á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
      const { data: readData, error: readError } = await supabase
        .from('homepage_equipment')
        .select('id, title')
        .limit(1)

      if (readError) {
        throw new Error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: ${readError.message}`)
      }

      // –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      const { data: insertData, error: insertError } = await supabase
        .from('homepage_equipment')
        .insert([{
          title: '–¢–µ—Å—Ç RLS',
          description: '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ RLS',
          icon: 'Monitor',
          gradient: 'gradient-card-purple',
          link: '/test',
          is_visible: false,
          sort_order: 9999
        }])
        .select()

      setTestResult({
        canRead: !readError,
        canInsert: !insertError,
        readData,
        insertData,
        insertError: insertError?.message
      })

      if (insertError) {
        setStep('error')
        setError(`RLS –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ: ${insertError.message}`)
      } else {
        setStep('complete')
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        if (insertData?.[0]?.id) {
          await supabase
            .from('homepage_equipment')
            .delete()
            .eq('id', insertData[0].id)
        }
      }

    } catch (err: any) {
      setStep('error')
      setError(err.message)
    }
  }

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text)
  }

  const openSupabaseDashboard = () => {
    window.open('https://supabase.com/dashboard/project/zbykhdjqrtqftfitbvbt/sql', '_blank')
  }

  const rlsFixSQL = `-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï RLS –ü–û–õ–ò–¢–ò–ö –î–õ–Ø HOMEPAGE_EQUIPMENT
-- –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª–∏—Ç–∏–∫–∏
DROP POLICY IF EXISTS "Allow anonymous read access" ON homepage_equipment;
DROP POLICY IF EXISTS "Allow authenticated full access" ON homepage_equipment;

-- –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª–∏—Ç–∏–∫–∏
-- 1. –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è - –≤—Å–µ –º–æ–≥—É—Ç —á–∏—Ç–∞—Ç—å
CREATE POLICY "Public read access for homepage_equipment" ON homepage_equipment
    FOR SELECT USING (true);

-- 2. –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ - —Ç–æ–ª—å–∫–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
CREATE POLICY "Authenticated users can manage homepage_equipment" ON homepage_equipment
    FOR ALL USING (
        auth.uid() IS NOT NULL
    );

-- –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
SELECT 'RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è homepage_equipment –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!' as status;`

  const disableRLSSQL = `-- –í–†–ï–ú–ï–ù–ù–û–ï –û–¢–ö–õ–Æ–ß–ï–ù–ò–ï RLS –î–õ–Ø HOMEPAGE_EQUIPMENT
ALTER TABLE homepage_equipment DISABLE ROW LEVEL SECURITY;

-- –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–ª–∏—Ç–∏–∫–∏
DROP POLICY IF EXISTS "Allow anonymous read access" ON homepage_equipment;
DROP POLICY IF EXISTS "Allow authenticated full access" ON homepage_equipment;
DROP POLICY IF EXISTS "Public read access for homepage_equipment" ON homepage_equipment;
DROP POLICY IF EXISTS "Authenticated users can manage homepage_equipment" ON homepage_equipment;

-- –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏
SELECT 'RLS –¥–ª—è homepage_equipment –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!' as status;`

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-4xl mx-auto px-4">
        <div className="mb-8 text-center">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RLS –æ—à–∏–±–∫–∏
          </h1>
          <p className="text-gray-600">
            –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å Row Level Security –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã homepage_equipment
          </p>
        </div>

        <div className="space-y-6">
          {/* –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <AlertTriangle className="h-5 w-5 text-yellow-500" />
                –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ RLS
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 mb-4">
                –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –≤ —á–µ–º –∏–º–µ–Ω–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞ —Å RLS –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏.
              </p>
              
              <Button 
                onClick={testRLS}
                disabled={step === 'testing'}
                className="w-full"
              >
                {step === 'testing' ? '–ü—Ä–æ–≤–µ—Ä—è–µ–º...' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É'}
              </Button>

              {testResult && (
                <div className="mt-4 space-y-2">
                  <div className="flex items-center gap-2">
                    {testResult.canRead ? (
                      <CheckCircle className="h-4 w-4 text-green-500" />
                    ) : (
                      <XCircle className="h-4 w-4 text-red-500" />
                    )}
                    <span>–ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: {testResult.canRead ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}</span>
                  </div>
                  
                  <div className="flex items-center gap-2">
                    {testResult.canInsert ? (
                      <CheckCircle className="h-4 w-4 text-green-500" />
                    ) : (
                      <XCircle className="h-4 w-4 text-red-500" />
                    )}
                    <span>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: {testResult.canInsert ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ RLS'}</span>
                  </div>

                  {testResult.insertError && (
                    <Alert className="mt-4">
                      <AlertTriangle className="h-4 w-4" />
                      <AlertDescription>
                        <strong>–û—à–∏–±–∫–∞ RLS:</strong> {testResult.insertError}
                      </AlertDescription>
                    </Alert>
                  )}
                </div>
              )}
            </CardContent>
          </Card>

          {/* –†–µ—à–µ–Ω–∏–µ 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RLS */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <CheckCircle className="h-5 w-5 text-green-500" />
                –†–µ—à–µ–Ω–∏–µ 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ RLS –ø–æ–ª–∏—Ç–∏–∫ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 mb-4">
                –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã homepage_equipment.
              </p>
              
              <div className="space-y-4">
                <div className="bg-gray-100 p-4 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-sm font-medium">SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</span>
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(rlsFixSQL)}
                    >
                      <Copy className="h-4 w-4 mr-1" />
                      –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                  <pre className="text-xs text-gray-700 whitespace-pre-wrap overflow-x-auto">
                    {rlsFixSQL}
                  </pre>
                </div>

                <Button 
                  onClick={openSupabaseDashboard}
                  className="w-full"
                  variant="outline"
                >
                  <ExternalLink className="h-4 w-4 mr-2" />
                  –û—Ç–∫—Ä—ã—Ç—å Supabase Dashboard
                </Button>
              </div>
            </CardContent>
          </Card>

          {/* –†–µ—à–µ–Ω–∏–µ 2: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ RLS */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <AlertTriangle className="h-5 w-5 text-yellow-500" />
                –†–µ—à–µ–Ω–∏–µ 2: –í—Ä–µ–º–µ–Ω–Ω–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ RLS (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
              </CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-gray-600 mb-4">
                –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç–∫–ª—é—á–∞–µ–º RLS –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã. –ü–æ–¥—Ö–æ–¥–∏—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
              </p>
              
              <div className="space-y-4">
                <div className="bg-gray-100 p-4 rounded-lg">
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-sm font-medium">SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è RLS:</span>
                    <Button
                      size="sm"
                      variant="outline"
                      onClick={() => copyToClipboard(disableRLSSQL)}
                    >
                      <Copy className="h-4 w-4 mr-1" />
                      –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                  </div>
                  <pre className="text-xs text-gray-700 whitespace-pre-wrap overflow-x-auto">
                    {disableRLSSQL}
                  </pre>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
          <Card>
            <CardHeader>
              <CardTitle>üìã –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</CardTitle>
            </CardHeader>
            <CardContent>
              <ol className="list-decimal list-inside space-y-2 text-sm text-gray-600">
                <li>–ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É" –≤—ã—à–µ</li>
                <li>–ï—Å–ª–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å RLS, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ —Ä–µ—à–µ–Ω–∏–π</li>
                <li>–ù–∞–∂–º–∏—Ç–µ "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –Ω—É–∂–Ω–æ–≥–æ SQL —Å–∫—Ä–∏–ø—Ç–∞</li>
                <li>–ù–∞–∂–º–∏—Ç–µ "–û—Ç–∫—Ä—ã—Ç—å Supabase Dashboard"</li>
                <li>–í—Å—Ç–∞–≤—å—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SQL –≤ SQL Editor</li>
                <li>–ù–∞–∂–º–∏—Ç–µ "Run" –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</li>
                <li>–í–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –æ–±–Ω–æ–≤–∏—Ç–µ –µ—ë</li>
                <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–ª–æ–∫ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</li>
              </ol>
            </CardContent>
          </Card>

          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
          {step === 'complete' && (
            <Alert>
              <CheckCircle className="h-4 w-4" />
              <AlertDescription>
                <strong>–û—Ç–ª–∏—á–Ω–æ!</strong> RLS —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü—Ä–æ–±–ª–µ–º–∞ —Ä–µ—à–µ–Ω–∞.
              </AlertDescription>
            </Alert>
          )}

          {step === 'error' && error && (
            <Alert variant="destructive">
              <XCircle className="h-4 w-4" />
              <AlertDescription>
                <strong>–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞:</strong> {error}
              </AlertDescription>
            </Alert>
          )}
        </div>
      </div>
    </div>
  )
}

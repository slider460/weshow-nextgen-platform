import React, { useState, useEffect } from 'react'
import { supabase } from '../config/supabase'
import { Card, CardContent, CardHeader, CardTitle } from '../components/ui/card'
import { Button } from '../components/ui/button'
import { Alert, AlertDescription } from '../components/ui/alert'
import { CheckCircle, XCircle, AlertTriangle } from 'lucide-react'

export default function TestEstimatesPage() {
  const [estimates, setEstimates] = useState<any[]>([])
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)
  const [testResult, setTestResult] = useState<any>(null)

  useEffect(() => {
    fetchEstimates()
  }, [])

  const fetchEstimates = async () => {
    try {
      setLoading(true)
      setError(null)
      
      const { data, error } = await supabase
        .from('estimates')
        .select('*')
        .order('created_at', { ascending: false })
        .limit(10)

      if (error) {
        setError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`)
      } else {
        setEstimates(data || [])
      }
    } catch (err: any) {
      setError(err.message)
    } finally {
      setLoading(false)
    }
  }

  const testRLS = async () => {
    try {
      console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º RLS –¥–ª—è estimates...')
      
      // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const { data: users } = await supabase
        .from('users')
        .select('id')
        .limit(1)

      if (!users || users.length === 0) {
        setTestResult({
          canInsert: false,
          insertError: '–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ users'
        })
        return
      }

      // –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º user_id
      const { data: insertData, error: insertError } = await supabase
        .from('estimates')
        .insert([{
          user_id: users[0].id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π user_id
          status: 'draft',
          event_date: new Date().toISOString().split('T')[0],
          client_notes: '–¢–µ—Å—Ç RLS –¥–ª—è estimates'
        }])
        .select()

      setTestResult({
        canInsert: !insertError,
        insertError: insertError?.message,
        insertData
      })

      if (insertError) {
        console.log('‚ö†Ô∏è RLS –±–ª–æ–∫–∏—Ä—É–µ—Ç estimates:', insertError.message)
      } else {
        console.log('‚úÖ RLS –¥–ª—è estimates —Ä–∞–±–æ—Ç–∞–µ—Ç')
        // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        if (insertData?.[0]?.id) {
          await supabase
            .from('estimates')
            .delete()
            .eq('id', insertData[0].id)
        }
      }

    } catch (err: any) {
      setTestResult({
        canInsert: false,
        insertError: err.message
      })
    }
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-6xl mx-auto px-4">
        <div className="mb-8 text-center">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">
            üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã estimates
          </h1>
          <p className="text-gray-600">
            –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Ç–∞–±–ª–∏—Ü—ã estimates –∏ RLS –ø–æ–ª–∏—Ç–∏–∫
          </p>
        </div>

        <div className="space-y-6">
          {/* –¢–µ—Å—Ç RLS */}
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <AlertTriangle className="h-5 w-5 text-yellow-500" />
                –¢–µ—Å—Ç RLS –¥–ª—è estimates
              </CardTitle>
            </CardHeader>
            <CardContent>
              <Button onClick={testRLS} className="mb-4">
                –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç RLS
              </Button>

              {testResult && (
                <div className="space-y-2">
                  <div className="flex items-center gap-2">
                    {testResult.canInsert ? (
                      <CheckCircle className="h-4 w-4 text-green-500" />
                    ) : (
                      <XCircle className="h-4 w-4 text-red-500" />
                    )}
                    <span>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π: {testResult.canInsert ? '–†–∞–±–æ—Ç–∞–µ—Ç' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ RLS'}</span>
                  </div>

                  {testResult.insertError && (
                    <Alert className="mt-4">
                      <AlertTriangle className="h-4 w-4" />
                      <AlertDescription>
                        <strong>–û—à–∏–±–∫–∞ RLS:</strong> {testResult.insertError}
                      </AlertDescription>
                    </Alert>
                  )}
                </div>
              )}
            </CardContent>
          </Card>

          {/* –°–ø–∏—Å–æ–∫ estimates */}
          <Card>
            <CardHeader>
              <CardTitle>üìã –°–ø–∏—Å–æ–∫ estimates</CardTitle>
            </CardHeader>
            <CardContent>
              {loading ? (
                <div className="text-center py-4">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
              ) : error ? (
                <Alert variant="destructive">
                  <XCircle className="h-4 w-4" />
                  <AlertDescription>{error}</AlertDescription>
                </Alert>
              ) : (
                <div className="space-y-4">
                  <div className="text-sm text-gray-600">
                    –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {estimates.length}
                  </div>
                  
                  {estimates.length === 0 ? (
                    <div className="text-center py-8 text-gray-500">
                      –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ estimates
                    </div>
                  ) : (
                    <div className="space-y-2">
                      {estimates.map((estimate) => (
                        <div key={estimate.id} className="p-4 border rounded-lg bg-white">
                          <div className="flex justify-between items-start">
                            <div>
                              <div className="font-medium">ID: {estimate.id}</div>
                              <div className="text-sm text-gray-600">
                                –°—Ç–∞—Ç—É—Å: {estimate.status}
                              </div>
                              <div className="text-sm text-gray-600">
                                –î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: {estimate.event_date}
                              </div>
                              {estimate.client_notes && (
                                <div className="text-sm text-gray-600 mt-1">
                                  –ó–∞–º–µ—Ç–∫–∏: {estimate.client_notes}
                                </div>
                              )}
                            </div>
                            <div className="text-xs text-gray-400">
                              {new Date(estimate.created_at).toLocaleString()}
                            </div>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              )}
            </CardContent>
          </Card>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
          <Card>
            <CardHeader>
              <CardTitle>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div>
                  <h4 className="font-medium mb-2">–ï—Å–ª–∏ RLS –±–ª–æ–∫–∏—Ä—É–µ—Ç estimates:</h4>
                  <ol className="list-decimal list-inside space-y-1 text-sm text-gray-600">
                    <li>–û—Ç–∫—Ä–æ–π—Ç–µ Supabase Dashboard</li>
                    <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ SQL Editor</li>
                    <li>–í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è RLS estimates</li>
                    <li>–û–±–Ω–æ–≤–∏—Ç–µ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
                  </ol>
                </div>
                
                <div className="bg-gray-100 p-4 rounded-lg">
                  <h4 className="font-medium mb-2">SQL –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</h4>
                  <pre className="text-xs text-gray-700 whitespace-pre-wrap">
{`ALTER TABLE estimates DISABLE ROW LEVEL SECURITY;

DROP POLICY IF EXISTS "Users can view own estimates" ON estimates;
DROP POLICY IF EXISTS "Users can create estimates" ON estimates;
DROP POLICY IF EXISTS "Users can update own estimates" ON estimates;
DROP POLICY IF EXISTS "Managers can view all estimates" ON estimates;
DROP POLICY IF EXISTS "Managers can update all estimates" ON estimates;
DROP POLICY IF EXISTS "Public read access for estimates" ON estimates;
DROP POLICY IF EXISTS "Admins can manage estimates" ON estimates;`}
                  </pre>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  )
}

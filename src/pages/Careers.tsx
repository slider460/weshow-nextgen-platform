import { useState } from "react";
import Header from "../components/Header";
import Footer from "../components/Footer";
import { Button } from "../components/ui/button";
import { Input } from "../components/ui/input";
import { Label } from "../components/ui/label";
import { Textarea } from "../components/ui/textarea";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "../components/ui/select";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../components/ui/card";
import { Badge } from "../components/ui/badge";
import { 
  Users, 
  Zap, 
  Star, 
  Globe, 
  Heart, 
  TrendingUp, 
  Award, 
  Send,
  Upload,
  FileText,
  Mail,
  Phone,
  MapPin,
  Calendar,
  Briefcase,
  GraduationCap
} from "lucide-react";
import { useToast } from "../hooks/use-toast";

const Careers = () => {
  const { toast } = useToast();
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    email: "",
    phone: "",
    position: "",
    experience: "",
    education: "",
    skills: "",
    coverLetter: "",
    portfolio: "",
    linkedin: "",
    expectedSalary: "",
    startDate: "",
    source: ""
  });

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    
    // Simulate form submission
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    toast({
      title: "–†–µ–∑—é–º–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!",
      description: "–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∫–∞–Ω–¥–∏–¥–∞—Ç—É—Ä—É –∏ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è"
    });
    
    setFormData({
      firstName: "", lastName: "", email: "", phone: "", position: "",
      experience: "", education: "", skills: "", coverLetter: "",
      portfolio: "", linkedin: "", expectedSalary: "", startDate: "", source: ""
    });
    setIsSubmitting(false);
  };

  const benefits = [
    {
      icon: <Users className="h-8 w-8" />,
      title: "–ö–æ–º–∞–Ω–¥–∞ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤",
      description: "–†–∞–±–æ—Ç–∞–π—Ç–µ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏ —Å–≤–æ–µ–≥–æ –¥–µ–ª–∞"
    },
    {
      icon: <Zap className="h-8 w-8" />,
      title: "–ë—ã—Å—Ç—Ä—ã–π —Ä–æ—Å—Ç",
      description: "–ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ –Ω–∞–≤—ã–∫–æ–≤"
    },
    {
      icon: <Star className="h-8 w-8" />,
      title: "–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏",
      description: "–ü–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è"
    },
    {
      icon: <Globe className="h-8 w-8" />,
      title: "–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã",
      description: "–£—á–∞—Å—Ç–≤—É–π—Ç–µ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö"
    },
    {
      icon: <Heart className="h-8 w-8" />,
      title: "–î—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞",
      description: "–ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è —Ä–∞–±–æ—á–∞—è —Å—Ä–µ–¥–∞"
    },
    {
      icon: <TrendingUp className="h-8 w-8" />,
      title: "–°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å",
      description: "–ù–∞–¥–µ–∂–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è —Å 15+ –ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º"
    }
  ];

  const openPositions = [
    {
      title: "Frontend Developer",
      department: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
      type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
      location: "–ú–æ—Å–∫–≤–∞",
      experience: "2+ –ª–µ—Ç",
      skills: ["React", "TypeScript", "Vue.js"],
      description: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤"
    },
    {
      title: "UI/UX Designer",
      department: "–î–∏–∑–∞–π–Ω",
      type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
      location: "–ú–æ—Å–∫–≤–∞",
      experience: "3+ –ª–µ—Ç",
      skills: ["Figma", "Adobe Creative Suite", "Prototyping"],
      description: "–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ –æ–ø—ã—Ç–∞"
    },
    {
      title: "Project Manager",
      department: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏",
      type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
      location: "–ú–æ—Å–∫–≤–∞",
      experience: "4+ –ª–µ—Ç",
      skills: ["Agile", "Scrum", "Team Leadership"],
      description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏"
    },
    {
      title: "3D Artist",
      department: "3D –ì—Ä–∞—Ñ–∏–∫–∞",
      type: "–ü–æ–ª–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å",
      location: "–ú–æ—Å–∫–≤–∞",
      experience: "2+ –ª–µ—Ç",
      skills: ["Blender", "Maya", "Substance Painter"],
      description: "–°–æ–∑–¥–∞–Ω–∏–µ 3D –º–æ–¥–µ–ª–µ–π –∏ –∞–Ω–∏–º–∞—Ü–∏–π"
    }
  ];

  return (
    <div className="min-h-screen bg-slate-50">
      <Header />
      
      {/* Hero Section */}
      <section className="pt-32 pb-20 bg-gradient-to-br from-blue-50 to-indigo-100">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto text-center">
            <div className="inline-flex items-center px-4 py-2 rounded-full bg-blue-100 border border-blue-200 text-sm font-medium text-blue-700 mb-6">
              üöÄ –ö–∞—Ä—å–µ—Ä–∞ –≤ WESHOW
            </div>
            <h1 className="text-4xl lg:text-6xl font-bold text-slate-900 leading-tight mb-6">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫
              <span className="text-gradient bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent block">
                –∫–æ–º–∞–Ω–¥–µ –º–µ—á—Ç—ã
              </span>
            </h1>
            <p className="text-xl text-slate-600 leading-relaxed mb-8 max-w-3xl mx-auto">
              –°–æ–∑–¥–∞–≤–∞–π—Ç–µ –±—É–¥—É—â–µ–µ –º—É–ª—å—Ç–∏–º–µ–¥–∏–π–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏. 
              –ú—ã –∏—â–µ–º —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö –∫ –≤—ã–∑–æ–≤–∞–º –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è–º.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button size="lg" className="px-8 py-4 text-lg" onClick={() => document.getElementById('open-positions')?.scrollIntoView({ behavior: 'smooth' })}>
                –û—Ç–∫—Ä—ã—Ç—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏
              </Button>
              <Button size="lg" variant="outline" className="px-8 py-4 text-lg" onClick={() => document.getElementById('application-form')?.scrollIntoView({ behavior: 'smooth' })}>
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Why WESHOW Section */}
      <section className="py-20 bg-white">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-4xl font-bold text-slate-900 mb-6">
              –ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç WESHOW?
            </h2>
            <p className="text-xl text-slate-600 max-w-3xl mx-auto">
              –ú—ã —Å–æ–∑–¥–∞–µ–º –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ, –∞ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Ä–æ—Å—Ç–∞, 
              —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–∞–º—ã—Ö —Å–º–µ–ª—ã—Ö –∏–¥–µ–π
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {benefits.map((benefit, index) => (
              <Card key={index} className="text-center hover:shadow-xl transition-all duration-300 hover:-translate-y-2">
                <CardHeader>
                  <div className="w-16 h-16 bg-gradient-to-br from-blue-500 to-indigo-500 rounded-2xl flex items-center justify-center mx-auto mb-4 text-white">
                    {benefit.icon}
                  </div>
                  <CardTitle className="text-xl">{benefit.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-slate-600">{benefit.description}</p>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Open Positions Section */}
      <section id="open-positions" className="py-20 bg-slate-50">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl lg:text-4xl font-bold text-slate-900 mb-6">
              –û—Ç–∫—Ä—ã—Ç—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏
            </h2>
            <p className="text-xl text-slate-600 max-w-3xl mx-auto">
              –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–æ–∑–∏—Ü–∏—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ–µ —Ä–µ–∑—é–º–µ –¥–ª—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è
            </p>
          </div>
          
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {openPositions.map((position, index) => (
              <Card key={index} className="hover:shadow-xl transition-all duration-300">
                <CardHeader>
                  <div className="flex justify-between items-start mb-4">
                    <div>
                      <CardTitle className="text-xl mb-2">{position.title}</CardTitle>
                      <CardDescription className="text-base">{position.description}</CardDescription>
                    </div>
                    <Badge variant="secondary" className="ml-2">{position.department}</Badge>
                  </div>
                  <div className="flex flex-wrap gap-2 mb-4">
                    <Badge variant="outline">{position.type}</Badge>
                    <Badge variant="outline">{position.location}</Badge>
                    <Badge variant="outline">{position.experience}</Badge>
                  </div>
                  <div className="flex flex-wrap gap-2">
                    {position.skills.map((skill, skillIndex) => (
                      <Badge key={skillIndex} variant="secondary" className="text-xs">
                        {skill}
                      </Badge>
                    ))}
                  </div>
                </CardHeader>
                <CardContent>
                  <Button 
                    className="w-full" 
                    onClick={() => document.getElementById('application-form')?.scrollIntoView({ behavior: 'smooth' })}
                  >
                    –û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </div>
      </section>

      {/* Application Form Section */}
      <section id="application-form" className="py-20 bg-white">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto">
            <div className="text-center mb-12">
              <h2 className="text-3xl lg:text-4xl font-bold text-slate-900 mb-6">
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—é–º–µ
              </h2>
              <p className="text-xl text-slate-600">
                –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è
              </p>
            </div>
            
            <Card className="shadow-xl">
              <CardHeader>
                <CardTitle className="text-2xl">–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é</CardTitle>
                <CardDescription>
                  –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –∏ —Å–≤–æ–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö
                </CardDescription>
              </CardHeader>
              <CardContent>
                <form onSubmit={handleSubmit} className="space-y-6">
                  {/* Personal Information */}
                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="firstName">–ò–º—è *</Label>
                      <Input
                        id="firstName"
                        required
                        value={formData.firstName}
                        onChange={(e) => handleInputChange("firstName", e.target.value)}
                        className="mt-2"
                      />
                    </div>
                    <div>
                      <Label htmlFor="lastName">–§–∞–º–∏–ª–∏—è *</Label>
                      <Input
                        id="lastName"
                        required
                        value={formData.lastName}
                        onChange={(e) => handleInputChange("lastName", e.target.value)}
                        className="mt-2"
                      />
                    </div>
                  </div>

                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="email">Email *</Label>
                      <Input
                        id="email"
                        type="email"
                        required
                        value={formData.email}
                        onChange={(e) => handleInputChange("email", e.target.value)}
                        className="mt-2"
                      />
                    </div>
                    <div>
                      <Label htmlFor="phone">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                      <Input
                        id="phone"
                        type="tel"
                        value={formData.phone}
                        onChange={(e) => handleInputChange("phone", e.target.value)}
                        className="mt-2"
                      />
                    </div>
                  </div>

                  {/* Professional Information */}
                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="position">–ñ–µ–ª–∞–µ–º–∞—è –¥–æ–ª–∂–Ω–æ—Å—Ç—å *</Label>
                      <Select value={formData.position} onValueChange={(value) => handleInputChange("position", value)}>
                        <SelectTrigger className="mt-2">
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="frontend-developer">Frontend Developer</SelectItem>
                          <SelectItem value="ui-ux-designer">UI/UX Designer</SelectItem>
                          <SelectItem value="project-manager">Project Manager</SelectItem>
                          <SelectItem value="3d-artist">3D Artist</SelectItem>
                          <SelectItem value="other">–î—Ä—É–≥–æ–µ</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                    <div>
                      <Label htmlFor="experience">–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã</Label>
                      <Select value={formData.experience} onValueChange={(value) => handleInputChange("experience", value)}>
                        <SelectTrigger className="mt-2">
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—ã—Ç" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="no-experience">–ë–µ–∑ –æ–ø—ã—Ç–∞</SelectItem>
                          <SelectItem value="1-2-years">1-2 –≥–æ–¥–∞</SelectItem>
                          <SelectItem value="3-5-years">3-5 –ª–µ—Ç</SelectItem>
                          <SelectItem value="5-plus-years">5+ –ª–µ—Ç</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>

                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="education">–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</Label>
                      <Input
                        id="education"
                        value={formData.education}
                        onChange={(e) => handleInputChange("education", e.target.value)}
                        className="mt-2"
                        placeholder="–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ"
                      />
                    </div>
                    <div>
                      <Label htmlFor="expectedSalary">–û–∂–∏–¥–∞–µ–º–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞</Label>
                      <Input
                        id="expectedSalary"
                        value={formData.expectedSalary}
                        onChange={(e) => handleInputChange("expectedSalary", e.target.value)}
                        className="mt-2"
                        placeholder="–í —Ä—É–±–ª—è—Ö"
                      />
                    </div>
                  </div>

                  <div>
                    <Label htmlFor="skills">–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏</Label>
                    <Textarea
                      id="skills"
                      rows={3}
                      value={formData.skills}
                      onChange={(e) => handleInputChange("skills", e.target.value)}
                      className="mt-2"
                      placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏"
                    />
                  </div>

                  <div>
                    <Label htmlFor="coverLetter">–°–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ</Label>
                    <Textarea
                      id="coverLetter"
                      rows={5}
                      value={formData.coverLetter}
                      onChange={(e) => handleInputChange("coverLetter", e.target.value)}
                      className="mt-2"
                      placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ WESHOW –∏ —á—Ç–æ –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏"
                    />
                  </div>

                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="portfolio">–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ/–°–∞–π—Ç</Label>
                      <Input
                        id="portfolio"
                        type="url"
                        value={formData.portfolio}
                        onChange={(e) => handleInputChange("portfolio", e.target.value)}
                        className="mt-2"
                        placeholder="https://your-portfolio.com"
                      />
                    </div>
                    <div>
                      <Label htmlFor="linkedin">LinkedIn</Label>
                      <Input
                        id="linkedin"
                        type="url"
                        value={formData.linkedin}
                        onChange={(e) => handleInputChange("linkedin", e.target.value)}
                        className="mt-2"
                        placeholder="https://linkedin.com/in/your-profile"
                      />
                    </div>
                  </div>

                  <div className="grid md:grid-cols-2 gap-6">
                    <div>
                      <Label htmlFor="startDate">–ö–æ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ</Label>
                      <Input
                        id="startDate"
                        type="date"
                        value={formData.startDate}
                        onChange={(e) => handleInputChange("startDate", e.target.value)}
                        className="mt-2"
                      />
                    </div>
                    <div>
                      <Label htmlFor="source">–û—Ç–∫—É–¥–∞ —É–∑–Ω–∞–ª–∏ –æ –≤–∞–∫–∞–Ω—Å–∏–∏</Label>
                      <Select value={formData.source} onValueChange={(value) => handleInputChange("source", value)}>
                        <SelectTrigger className="mt-2">
                          <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫" />
                        </SelectTrigger>
                        <SelectContent>
                          <SelectItem value="website">–°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏</SelectItem>
                          <SelectItem value="linkedin">LinkedIn</SelectItem>
                          <SelectItem value="hh-ru">HeadHunter</SelectItem>
                          <SelectItem value="recommendation">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è</SelectItem>
                          <SelectItem value="other">–î—Ä—É–≥–æ–µ</SelectItem>
                        </SelectContent>
                      </Select>
                    </div>
                  </div>

                  <div className="pt-6">
                    <Button 
                      type="submit" 
                      size="lg" 
                      className="w-full"
                      disabled={isSubmitting}
                    >
                      {isSubmitting ? (
                        <>
                          <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                          –û—Ç–ø—Ä–∞–≤–∫–∞...
                        </>
                      ) : (
                        <>
                          <Send className="mr-2 h-4 w-4" />
                          –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                        </>
                      )}
                    </Button>
                  </div>
                </form>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Contact Info Section */}
      <section className="py-20 bg-slate-50">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="max-w-4xl mx-auto text-center">
            <h2 className="text-3xl font-bold text-slate-900 mb-8">
              –û—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã?
            </h2>
            <p className="text-xl text-slate-600 mb-8">
              –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º HR –æ—Ç–¥–µ–ª–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            </p>
            <div className="grid md:grid-cols-3 gap-8">
              <div className="flex flex-col items-center">
                <Mail className="h-8 w-8 text-blue-500 mb-4" />
                <h3 className="font-semibold text-slate-900 mb-2">Email</h3>
                <a href="mailto:hr@weshow.ru" className="text-blue-600 hover:underline">
                  hr@weshow.ru
                </a>
              </div>
              <div className="flex flex-col items-center">
                <Phone className="h-8 w-8 text-blue-500 mb-4" />
                <h3 className="font-semibold text-slate-900 mb-2">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                <a href="tel:+74955807537" className="text-blue-600 hover:underline">
                  +7 (495) 580-75-37
                </a>
              </div>
              <div className="flex flex-col items-center">
                <MapPin className="h-8 w-8 text-blue-500 mb-4" />
                <h3 className="font-semibold text-slate-900 mb-2">–ê–¥—Ä–µ—Å</h3>
                <p className="text-slate-600">–ú–æ—Å–∫–≤–∞, —É–ª. –†–æ—á–¥–µ–ª—å—Å–∫–∞—è, 14–ê</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      <Footer />
    </div>
  );
};

export default Careers;

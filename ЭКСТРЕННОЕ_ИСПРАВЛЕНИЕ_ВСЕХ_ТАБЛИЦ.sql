-- –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• RLS –ü–û–õ–ò–¢–ò–ö
-- –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ Supabase SQL Editor –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è

-- ==============================================
-- –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ò –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –í–°–ï–• –ü–û–õ–ò–¢–ò–ö
-- ==============================================

-- 1. HOMEPAGE_EQUIPMENT - –ë–ª–æ–∫–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
DROP POLICY IF EXISTS "Allow authenticated full access" ON homepage_equipment;
DROP POLICY IF EXISTS "Allow anonymous read access" ON homepage_equipment;
DROP POLICY IF EXISTS "Public read access for homepage_equipment" ON homepage_equipment;
DROP POLICY IF EXISTS "Authenticated users can manage homepage_equipment" ON homepage_equipment;

CREATE POLICY "Public read access for homepage_equipment" ON homepage_equipment
    FOR SELECT USING (true);
CREATE POLICY "Authenticated users can manage homepage_equipment" ON homepage_equipment
    FOR ALL USING (auth.uid() IS NOT NULL);

-- 2. LOGOS - –õ–æ–≥–æ—Ç–∏–ø—ã –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤
DROP POLICY IF EXISTS "Allow public read access" ON logos;
DROP POLICY IF EXISTS "Authenticated users can manage logos" ON logos;
DROP POLICY IF EXISTS "Enable read access for all users" ON logos;
DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON logos;
DROP POLICY IF EXISTS "Enable update for authenticated users only" ON logos;
DROP POLICY IF EXISTS "Enable delete for authenticated users only" ON logos;
DROP POLICY IF EXISTS "Allow anonymous read access" ON logos;

CREATE POLICY "Allow public read access" ON logos
    FOR SELECT USING (true);
CREATE POLICY "Authenticated users can manage logos" ON logos
    FOR ALL USING (auth.uid() IS NOT NULL);

-- 3. CASES - –ö–µ–π—Å—ã –∏ –ø—Ä–æ–µ–∫—Ç—ã
DROP POLICY IF EXISTS "Public read access for cases" ON cases;
DROP POLICY IF EXISTS "Authenticated users can manage cases" ON cases;
DROP POLICY IF EXISTS "Enable read access for all users" ON cases;
DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON cases;
DROP POLICY IF EXISTS "Enable update for authenticated users only" ON cases;
DROP POLICY IF EXISTS "Enable delete for authenticated users only" ON cases;

CREATE POLICY "Public read access for cases" ON cases
    FOR SELECT USING (true);
CREATE POLICY "Authenticated users can manage cases" ON cases
    FOR ALL USING (auth.uid() IS NOT NULL);

-- 4. NEWS_BLOG - –ù–æ–≤–æ—Å—Ç–∏ –∏ –±–ª–æ–≥
DROP POLICY IF EXISTS "Public read access for news_blog" ON news_blog;
DROP POLICY IF EXISTS "Authenticated users can manage news_blog" ON news_blog;
DROP POLICY IF EXISTS "Enable read access for all users" ON news_blog;
DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON news_blog;
DROP POLICY IF EXISTS "Enable update for authenticated users only" ON news_blog;
DROP POLICY IF EXISTS "Enable delete for authenticated users only" ON news_blog;

CREATE POLICY "Public read access for news_blog" ON news_blog
    FOR SELECT USING (true);
CREATE POLICY "Authenticated users can manage news_blog" ON news_blog
    FOR ALL USING (auth.uid() IS NOT NULL);

-- 5. SERVICES_BLOCKS - –ë–ª–æ–∫–∏ —É—Å–ª—É–≥
DROP POLICY IF EXISTS "Public read access for services_blocks" ON services_blocks;
DROP POLICY IF EXISTS "Authenticated users can manage services_blocks" ON services_blocks;
DROP POLICY IF EXISTS "Enable read access for all users" ON services_blocks;
DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON services_blocks;
DROP POLICY IF EXISTS "Enable update for authenticated users only" ON services_blocks;
DROP POLICY IF EXISTS "Enable delete for authenticated users only" ON services_blocks;

CREATE POLICY "Public read access for services_blocks" ON services_blocks
    FOR SELECT USING (true);
CREATE POLICY "Authenticated users can manage services_blocks" ON services_blocks
    FOR ALL USING (auth.uid() IS NOT NULL);

-- 6. USER_PROFILES - –ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
DROP POLICY IF EXISTS "Users can view own profile" ON user_profiles;
DROP POLICY IF EXISTS "Users can update own profile" ON user_profiles;
DROP POLICY IF EXISTS "Authenticated users can insert profiles" ON user_profiles;
DROP POLICY IF EXISTS "Public profiles are viewable by everyone" ON user_profiles;

CREATE POLICY "Users can view own profile" ON user_profiles
    FOR SELECT USING (auth.uid() = id);
CREATE POLICY "Users can update own profile" ON user_profiles
    FOR UPDATE USING (auth.uid() = id);
CREATE POLICY "Authenticated users can insert profiles" ON user_profiles
    FOR INSERT WITH CHECK (auth.uid() = id);

-- ==============================================
-- –ü–†–û–í–ï–†–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê
-- ==============================================

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å RLS –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
SELECT 
    schemaname,
    tablename,
    rowsecurity as rls_enabled
FROM pg_tables 
WHERE schemaname = 'public' 
    AND tablename IN ('homepage_equipment', 'logos', 'cases', 'news_blog', 'services_blocks', 'user_profiles')
ORDER BY tablename;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
SELECT 
    schemaname,
    tablename,
    policyname,
    permissive,
    roles,
    cmd
FROM pg_policies 
WHERE schemaname = 'public' 
    AND tablename IN ('homepage_equipment', 'logos', 'cases', 'news_blog', 'services_blocks', 'user_profiles')
ORDER BY tablename, policyname;

-- –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –≤ –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü–µ
SELECT 'homepage_equipment' as table_name, COUNT(*) as record_count FROM homepage_equipment
UNION ALL
SELECT 'logos' as table_name, COUNT(*) as record_count FROM logos
UNION ALL
SELECT 'cases' as table_name, COUNT(*) as record_count FROM cases
UNION ALL
SELECT 'news_blog' as table_name, COUNT(*) as record_count FROM news_blog
UNION ALL
SELECT 'services_blocks' as table_name, COUNT(*) as record_count FROM services_blocks
UNION ALL
SELECT 'user_profiles' as table_name, COUNT(*) as record_count FROM user_profiles;

-- –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
SELECT 'üöÄ –í–°–ï RLS –ü–û–õ–ò–¢–ò–ö–ò –ò–°–ü–†–ê–í–õ–ï–ù–´! –°–∞–π—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Å—Ç–∞–±–∏–ª—å–Ω–æ!' as status;

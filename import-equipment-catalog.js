#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≤ Supabase
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ JSON —Ñ–∞–π–ª—ã –æ–±—Ä–∞—Ç–Ω–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
 */

import { createClient } from '@supabase/supabase-js';
import fs from 'fs';
import path from 'path';

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const supabaseUrl = 'https://zbykhdjqrtqftfitbvbt.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

const exportDir = './equipment-catalog-export';

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –∫–∞—Ç–∞–ª–æ–≥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è...');

async function importEquipmentCatalog() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
    if (!fs.existsSync(exportDir)) {
      console.error('‚ùå –ü–∞–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ export-equipment-catalog.js');
      process.exit(1);
    }

    // 1. –ò–º–ø–æ—Ä—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
    console.log('üìÅ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è...');
    const categoriesPath = path.join(exportDir, 'equipment_categories.json');
    if (fs.existsSync(categoriesPath)) {
      const categories = JSON.parse(fs.readFileSync(categoriesPath, 'utf8'));
      
      for (const category of categories) {
        const { error } = await supabase
          .from('equipment_categories')
          .upsert({
            id: category.id,
            name: category.name,
            description: category.description,
            icon: category.icon,
            color: category.color,
            created_at: category.created_at,
            updated_at: new Date().toISOString()
          });
        
        if (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category.name}:`, error);
        } else {
          console.log(`‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: ${category.name}`);
        }
      }
    }

    // 2. –ò–º–ø–æ—Ä—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
    console.log('üîß –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ...');
    const equipmentPath = path.join(exportDir, 'equipment_catalog.json');
    if (fs.existsSync(equipmentPath)) {
      const equipment = JSON.parse(fs.readFileSync(equipmentPath, 'utf8'));
      
      for (const item of equipment) {
        const { error } = await supabase
          .from('equipment_catalog')
          .upsert({
            id: item.id,
            name: item.name,
            category: item.category,
            brand: item.brand,
            model: item.model,
            description: item.description,
            specifications: item.specifications,
            pricing: item.pricing,
            availability: item.availability,
            media: item.media,
            requirements: item.requirements,
            tags: item.tags,
            rating: item.rating,
            is_active: item.is_active,
            featured: item.featured,
            created_at: item.created_at,
            updated_at: new Date().toISOString()
          });
        
        if (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è ${item.name}:`, error);
        } else {
          console.log(`‚úÖ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${item.name}`);
        }
      }
    }

    // 3. –ò–º–ø–æ—Ä—Ç –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    console.log('üè† –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...');
    const homepagePath = path.join(exportDir, 'homepage_equipment.json');
    if (fs.existsSync(homepagePath)) {
      const homepageEquipment = JSON.parse(fs.readFileSync(homepagePath, 'utf8'));
      
      for (const item of homepageEquipment) {
        const { error } = await supabase
          .from('homepage_equipment')
          .upsert({
            id: item.id,
            equipment_id: item.equipment_id,
            sort_order: item.sort_order,
            is_visible: item.is_visible,
            created_at: item.created_at,
            updated_at: new Date().toISOString()
          });
        
        if (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${item.id}:`, error);
        } else {
          console.log(`‚úÖ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${item.id}`);
        }
      }
    }

    console.log('\\nüéâ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üí° –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Supabase.');

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
importEquipmentCatalog();




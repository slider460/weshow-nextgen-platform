#!/usr/bin/env node

// –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∫–µ–π—Å–æ–≤ –∫–∞–∫ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
const SUPABASE_URL = 'https://zbykhdjqrtqftfitbvbt.supabase.co'
const SUPABASE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InpieWtoZGpxcnRxZnRmaXRidmJ0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTkxMzkzMjMsImV4cCI6MjA3NDcxNTMyM30.L9M4qQ_gkoyLj7oOwKZgyOVHoGv4JMJw-8m91IJAZjE'

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ REST API (–∫–∞–∫ –≤ adminRest.ts)
async function fetchFromSupabase(table, params = '') {
  try {
    const url = `${SUPABASE_URL}/rest/v1/${table}${params ? '?' + params : ''}`
    
    const response = await fetch(url, {
      method: 'GET',
      headers: {
        'apikey': SUPABASE_KEY,
        'Authorization': `Bearer ${SUPABASE_KEY}`,
        'Content-Type': 'application/json'
      }
    })

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`)
    }

    return await response.json()
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ ${table}:`, error)
    throw error
  }
}

// –§—É–Ω–∫—Ü–∏—è getCases –∫–∞–∫ –≤ adminRest.ts
async function getCases() {
  try {
    return await fetchFromSupabase('cases', 'order=sort_order.asc')
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–µ–π—Å–æ–≤:', error)
    return []
  }
}

// –¢–µ—Å—Ç–∏—Ä—É–µ–º API
async function testCasesAPI() {
  console.log('üöÄ –¢–ï–°–¢–ò–†–£–Æ API –ö–ï–ô–°–û–í...\n');
  
  try {
    console.log('üì° –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –∫–µ–π—Å—ã —á–µ—Ä–µ–∑ REST API...');
    const cases = await getCases();
    
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∫–µ–π—Å–æ–≤: ${cases?.length || 0}`);
    
    if (cases && cases.length > 0) {
      console.log('\nüìã –°–ø–∏—Å–æ–∫ –∫–µ–π—Å–æ–≤:');
      cases.forEach((caseItem, index) => {
        console.log(`   ${index + 1}. ${caseItem.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`);
        console.log(`      –ö–ª–∏–µ–Ω—Ç: ${caseItem.client || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`      –ì–æ–¥: ${caseItem.year || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`      –í–∏–¥–∏–º—ã–π: ${caseItem.is_visible ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`      –ü–æ—Ä—è–¥–æ–∫: ${caseItem.sort_order || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log('');
      });
      
      console.log('üéâ API –ö–ï–ô–°–û–í –†–ê–ë–û–¢–ê–ï–¢!');
      console.log('‚úÖ –ö–µ–π—Å—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è');
      console.log('‚úÖ –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–µ–π—Å—ã');
    } else {
      console.log('‚ö†Ô∏è  –ö–µ–π—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
    }
    
  } catch (error) {
    console.log(`üí• –û—à–∏–±–∫–∞: ${error.message}`);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testCasesAPI();


